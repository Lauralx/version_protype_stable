{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/demo/components/apps/mail/service/mail.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/ripple\";\nfunction MailSidebarComponent_li_4_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.badge);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"bg-primary\": a0,\n    \"hover:surface-hover\": a1\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    \"text-primary-50\": a0\n  };\n};\nfunction MailSidebarComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵlistener(\"click\", function MailSidebarComponent_li_4_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.navigate(item_r1));\n    });\n    i0.ɵɵelement(1, \"i\", 5);\n    i0.ɵɵelementStart(2, \"span\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MailSidebarComponent_li_4_span_4_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c0, ctx_r0.url === item_r1.routerLink, ctx_r0.url !== item_r1.routerLink));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(item_r1.icon || \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c1, ctx_r0.url === item_r1.routerLink));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, ctx_r0.url === item_r1.routerLink));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r1.badge);\n  }\n}\nexport class MailSidebarComponent {\n  constructor(router, mailService) {\n    this.router = router;\n    this.mailService = mailService;\n    this.items = [];\n    this.url = '';\n    this.mailSubscription = this.mailService.mails$.subscribe(data => this.getBadgeValues(data));\n    this.routeSubscription = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(params => {\n      this.url = params.url;\n    });\n  }\n  navigate(item) {\n    if (item.routerLink) {\n      this.router.navigate([item.routerLink]);\n    }\n  }\n  getBadgeValues(data) {\n    let inbox = [],\n      starred = [],\n      spam = [],\n      important = [],\n      archived = [],\n      trash = [],\n      sent = [];\n    for (let i = 0; i < data.length; i++) {\n      let mail = data[i];\n      if (!mail.archived && !mail.trash && !mail.spam && !mail.hasOwnProperty('sent')) {\n        inbox.push(mail);\n      }\n      if (mail.starred && !mail.archived && !mail.trash) {\n        starred.push(mail);\n      }\n      if (mail.spam && !mail.archived && !mail.trash) {\n        spam.push(mail);\n      }\n      if (mail.important && !mail.archived && !mail.trash) {\n        important.push(mail);\n      }\n      if (mail.archived && !mail.trash) {\n        archived.push(mail);\n      }\n      if (mail.trash) {\n        trash.push(mail);\n      }\n      if (mail.sent && !mail.archived && !mail.trash) {\n        sent.push(mail);\n      }\n    }\n    this.badgeValues = {\n      inbox: inbox.length,\n      starred: starred.length,\n      spam: spam.length,\n      important: important.length,\n      archived: archived.length,\n      trash: trash.length,\n      sent: sent.length\n    };\n    this.updateSidebar();\n  }\n  updateSidebar() {\n    this.items = [{\n      label: 'Inbox',\n      icon: 'pi pi-inbox',\n      badge: this.badgeValues.inbox,\n      routerLink: '/apps/mail/inbox'\n    }, {\n      label: 'Starred',\n      icon: 'pi pi-star',\n      badge: this.badgeValues.starred,\n      routerLink: '/apps/mail/starred'\n    }, {\n      label: 'Spam',\n      icon: 'pi pi-ban',\n      badge: this.badgeValues.spam,\n      routerLink: '/apps/mail/spam'\n    }, {\n      label: 'Important',\n      icon: 'pi pi-bookmark',\n      badge: this.badgeValues.important,\n      routerLink: '/apps/mail/important'\n    }, {\n      label: 'Sent',\n      icon: 'pi pi-send',\n      badge: this.badgeValues.sent,\n      routerLink: '/apps/mail/sent'\n    }, {\n      label: 'Archived',\n      icon: 'pi pi-book',\n      badge: this.badgeValues.archived,\n      routerLink: '/apps/mail/archived'\n    }, {\n      label: 'Trash',\n      icon: 'pi pi-trash',\n      badge: this.badgeValues.trash,\n      routerLink: '/apps/mail/trash'\n    }];\n  }\n  ngOnDestroy() {\n    this.mailSubscription.unsubscribe();\n    this.routeSubscription.unsubscribe();\n  }\n}\nMailSidebarComponent.ɵfac = function MailSidebarComponent_Factory(t) {\n  return new (t || MailSidebarComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.MailService));\n};\nMailSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MailSidebarComponent,\n  selectors: [[\"app-mail-sidebar\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Compose New\", \"routerLink\", \"/apps/mail/compose\", 1, \"mb-5\", \"w-full\", \"p-button-outlined\"], [1, \"overflow-auto\"], [1, \"flex\", \"flex-row\", \"md:flex-column\", \"gap-1\", \"md:gap-2\", \"list-none\", \"m-0\", \"p-0\", \"overflow-auto\"], [\"pRipple\", \"\", \"class\", \"cursor-pointer select-none p-3 transition-duration-150 border-round flex align-items-center justify-content-center md:justify-content-start md:flex-1 flex-auto\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"pRipple\", \"\", 1, \"cursor-pointer\", \"select-none\", \"p-3\", \"transition-duration-150\", \"border-round\", \"flex\", \"align-items-center\", \"justify-content-center\", \"md:justify-content-start\", \"md:flex-1\", \"flex-auto\", 3, \"ngClass\", \"click\"], [1, \"md:mr-3\", \"text-600\", \"transition-duration-150\", \"text-lg\", 3, \"ngClass\"], [1, \"text-900\", \"font-medium\", \"hidden\", \"md:inline\", 3, \"ngClass\"], [\"class\", \"ml-auto text-sm font-semibold bg-primary-50 text-primary-900 px-2 py-1 hidden md:inline\", \"style\", \"border-radius: 2rem\", 4, \"ngIf\"], [1, \"ml-auto\", \"text-sm\", \"font-semibold\", \"bg-primary-50\", \"text-primary-900\", \"px-2\", \"py-1\", \"hidden\", \"md:inline\", 2, \"border-radius\", \"2rem\"]],\n  template: function MailSidebarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"button\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"ul\", 2);\n      i0.ɵɵtemplate(4, MailSidebarComponent_li_4_Template, 5, 14, \"li\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.RouterLink, i4.ButtonDirective, i5.Ripple],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["NavigationEnd","filter","i0","MailSidebarComponent","constructor","router","mailService","mailSubscription","mails$","subscribe","data","getBadgeValues","routeSubscription","events","pipe","event","params","url","navigate","item","routerLink","inbox","starred","spam","important","archived","trash","sent","i","length","mail","hasOwnProperty","push","badgeValues","updateSidebar","items","label","icon","badge","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\mail\\mail-sidebar\\mail-sidebar.component.ts","C:\\Users\\UsuarioPrincipal\\Downloads\\verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\mail\\mail-sidebar\\mail-sidebar.component.html"],"sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Mail } from 'src/app/demo/api/mail';\nimport { MailService } from 'src/app/demo/components/apps/mail/service/mail.service';\nimport { filter, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-mail-sidebar',\n    templateUrl: './mail-sidebar.component.html'\n})\nexport class MailSidebarComponent implements OnDestroy {\n\n    items: MenuItem[] = [];\n\n    badgeValues: any;\n\n    mailSubscription: Subscription;\n\n    routeSubscription: Subscription;\n\n    url: string = '';\n\n    constructor(private router: Router, private mailService: MailService) {\n        this.mailSubscription = this.mailService.mails$.subscribe(data => this.getBadgeValues(data));\n\n        this.routeSubscription = this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe((params: any) => {\n            this.url = params.url;\n        });\n    }\n\n    navigate(item: MenuItem) {\n        if (item.routerLink) {\n            this.router.navigate([item.routerLink]);\n        }\n    }\n\n    getBadgeValues(data: Mail[]) {\n        let inbox = [],\n            starred = [],\n            spam = [],\n            important = [],\n            archived = [],\n            trash = [],\n            sent = []\n\n        for (let i = 0; i < data.length; i++) {\n            let mail = data[i];\n\n            if (!mail.archived && !mail.trash && !mail.spam && !mail.hasOwnProperty('sent')) {\n                inbox.push(mail);\n            }\n            if (mail.starred && !mail.archived && !mail.trash) {\n                starred.push(mail);\n            }\n            if (mail.spam && !mail.archived && !mail.trash) {\n                spam.push(mail);\n            }\n            if (mail.important && !mail.archived && !mail.trash) {\n                important.push(mail);\n            }\n            if (mail.archived && !mail.trash ) {\n                archived.push(mail);\n            }\n            if (mail.trash) {\n                trash.push(mail);\n            }\n            if (mail.sent && !mail.archived && !mail.trash) {\n                sent.push(mail);\n            }\n        }\n\n        this.badgeValues = {\n            inbox: inbox.length,\n            starred: starred.length,\n            spam: spam.length,\n            important: important.length,\n            archived: archived.length,\n            trash: trash.length,\n            sent: sent.length\n        };\n\n        this.updateSidebar();\n    }\n\n    updateSidebar() {\n        this.items = [\n            { label: 'Inbox', icon: 'pi pi-inbox', badge: this.badgeValues.inbox, routerLink: '/apps/mail/inbox' },\n            { label: 'Starred', icon: 'pi pi-star', badge: this.badgeValues.starred, routerLink: '/apps/mail/starred' },\n            { label: 'Spam', icon: 'pi pi-ban', badge: this.badgeValues.spam, routerLink: '/apps/mail/spam' },\n            { label: 'Important', icon: 'pi pi-bookmark', badge: this.badgeValues.important, routerLink: '/apps/mail/important' },\n            { label: 'Sent', icon: 'pi pi-send', badge: this.badgeValues.sent, routerLink: '/apps/mail/sent' },\n            { label: 'Archived', icon: 'pi pi-book', badge: this.badgeValues.archived, routerLink: '/apps/mail/archived' },\n            { label: 'Trash', icon: 'pi pi-trash', badge: this.badgeValues.trash, routerLink: '/apps/mail/trash' }\n        ];\n    }\n\n    ngOnDestroy() {\n        this.mailSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n}\n","<div>\n    <button pButton pRipple label=\"Compose New\" class=\"mb-5 w-full p-button-outlined\" routerLink=\"/apps/mail/compose\"></button>\n    <div class=\"overflow-auto\">\n        <ul class=\"flex flex-row md:flex-column gap-1 md:gap-2 list-none m-0 p-0 overflow-auto\">\n            <li pRipple *ngFor=\"let item of items; let i = index\" class=\"cursor-pointer select-none p-3 transition-duration-150 border-round flex align-items-center justify-content-center md:justify-content-start md:flex-1 flex-auto\"  \n                [ngClass]=\"{'bg-primary' : url === item.routerLink, 'hover:surface-hover': url !== item.routerLink}\" (click)=\"navigate(item)\">\n                <i [class]=\"item.icon || ''\" class=\"md:mr-3 text-600 transition-duration-150 text-lg\" [ngClass]=\"{'text-primary-50' : url === item.routerLink}\"></i>\n                <span class=\"text-900 font-medium hidden md:inline\" [ngClass]=\"{'text-primary-50' : url === item.routerLink}\">{{item.label}}</span>\n                <span *ngIf=\"item.badge\" class=\"ml-auto text-sm font-semibold bg-primary-50 text-primary-900 px-2 py-1 hidden md:inline\" style=\"border-radius: 2rem\">{{item.badge}}</span>\n            </li>\n        </ul>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}