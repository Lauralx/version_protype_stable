{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/demo/service/member.service\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../service/task.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/inputtext\";\nimport * as i7 from \"primeng/editor\";\nimport * as i8 from \"primeng/calendar\";\nimport * as i9 from \"primeng/toast\";\nimport * as i10 from \"primeng/autocomplete\";\nimport * as i11 from \"primeng/dialog\";\nimport * as i12 from \"primeng/ripple\";\nfunction CreateTaskComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"img\", 21);\n    i0.ɵɵelementStart(2, \"span\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const member_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"assets/demo/images/avatar/\", member_r2.image, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵproperty(\"alt\", member_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r2.name);\n  }\n}\nfunction CreateTaskComponent_ng_template_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"img\", 21);\n    i0.ɵɵelementStart(2, \"span\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const member_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"assets/demo/images/avatar/\", member_r3.image, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵproperty(\"alt\", member_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(member_r3.name);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"height\": \"150px\"\n  };\n};\nconst _c1 = function () {\n  return {\n    \"height\": \"2.5rem\"\n  };\n};\nexport class CreateTaskComponent {\n  constructor(memberService, messageService, taskService) {\n    this.memberService = memberService;\n    this.messageService = messageService;\n    this.taskService = taskService;\n    this.members = [];\n    this.filteredMembers = [];\n    this.dialogConfig = {\n      header: '',\n      visible: false\n    };\n    this.subscription = this.taskService.selectedTask$.subscribe(data => this.task = data);\n    this.dialogSubscription = this.taskService.dialogSource$.subscribe(data => {\n      this.dialogConfig = data;\n      if (this.dialogConfig.newTask) {\n        this.resetTask();\n      }\n    });\n  }\n  ngOnInit() {\n    this.memberService.getMembers().then(members => this.members = members);\n    this.resetTask();\n  }\n  filterMembers(event) {\n    var _a;\n    let filtered = [];\n    let query = event.query;\n    for (let i = 0; i < this.members.length; i++) {\n      let member = this.members[i];\n      if (((_a = member.name) === null || _a === void 0 ? void 0 : _a.toLowerCase().indexOf(query.toLowerCase())) == 0) {\n        filtered.push(member);\n      }\n    }\n    this.filteredMembers = filtered;\n  }\n  save() {\n    this.task.id = Math.floor(Math.random() * 1000);\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Success',\n      detail: `Task \"${this.task.name}\" created successfully.`\n    });\n    this.taskService.addTask(this.task);\n    this.taskService.closeDialog();\n  }\n  cancelTask() {\n    this.resetTask();\n    this.taskService.closeDialog();\n  }\n  resetTask() {\n    this.task = {\n      id: this.task && this.task.id ? this.task.id : Math.floor(Math.random() * 1000),\n      status: 'Waiting'\n    };\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\nCreateTaskComponent.ɵfac = function CreateTaskComponent_Factory(t) {\n  return new (t || CreateTaskComponent)(i0.ɵɵdirectiveInject(i1.MemberService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.TaskService));\n};\nCreateTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateTaskComponent,\n  selectors: [[\"app-create-task\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService])],\n  decls: 29,\n  vars: 18,\n  consts: [[\"styleClass\", \"mx-3 sm:mx-0 sm:w-full md:w-8 lg:w-6\", \"contentStyleClass\", \"border-round-bottom border-top-1 surface-border p-0\", 3, \"header\", \"visible\", \"modal\", \"dismissableMask\", \"visibleChange\"], [1, \"p-4\"], [1, \"grid\", \"p-fluid\", \"formgrid\"], [1, \"col-12\", \"field\"], [\"for\", \"name\", 1, \"text-900\", \"font-semibold\"], [\"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Title\", \"pInputText\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\", 1, \"text-900\", \"font-semibold\"], [3, \"ngModel\", \"ngModelChange\"], [1, \"col-6\", \"field\", \"mt-0\"], [\"for\", \"start\", 1, \"text-900\", \"font-semibold\"], [\"appendTo\", \"body\", \"dateFormat\", \"yy-mm-dd\", \"inputId\", \"start\", \"placeholder\", \"Start Date\", 3, \"showTime\", \"ngModel\", \"ngModelChange\"], [\"for\", \"end\", 1, \"text-900\", \"font-semibold\"], [\"appendTo\", \"body\", \"dateFormat\", \"yy-mm-dd\", \"inputId\", \"end\", \"placeholder\", \"Due Date\", 3, \"showTime\", \"ngModel\", \"ngModelChange\"], [\"for\", \"members\", 1, \"text-900\", \"font-semibold\"], [\"appendTo\", \"body\", \"inputId\", \"members\", \"field\", \"name\", \"placeholder\", \"Choose team members\", 3, \"ngModel\", \"suggestions\", \"multiple\", \"inputStyle\", \"ngModelChange\", \"completeMethod\"], [\"pTemplate\", \"selectedItem\"], [\"pTemplate\", \"item\"], [1, \"col-12\", \"flex\", \"justify-content-end\", \"mt-4\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"label\", \"Cancel\", 1, \"p-button-outlined\", \"w-8rem\", \"mr-3\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-check\", \"label\", \"Save\", 1, \"p-button-primary\", \"w-8rem\", 3, \"click\"], [1, \"flex\", \"align-items-center\"], [1, \"h-2rem\", \"w-2rem\", \"mr-2\", 3, \"src\", \"alt\"], [1, \"text-900\", \"font-medium\"], [1, \"flex\", \"align-items-center\", \"border-round\"]],\n  template: function CreateTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p-toast\");\n      i0.ɵɵelementStart(1, \"p-dialog\", 0);\n      i0.ɵɵlistener(\"visibleChange\", function CreateTaskComponent_Template_p_dialog_visibleChange_1_listener($event) {\n        return ctx.dialogConfig.visible = $event;\n      });\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Task Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateTaskComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.task.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p-editor\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateTaskComponent_Template_p_editor_ngModelChange_11_listener($event) {\n        return ctx.task.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Start Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p-calendar\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateTaskComponent_Template_p_calendar_ngModelChange_15_listener($event) {\n        return ctx.task.startDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 8)(17, \"label\", 11);\n      i0.ɵɵtext(18, \"Due Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p-calendar\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateTaskComponent_Template_p_calendar_ngModelChange_19_listener($event) {\n        return ctx.task.endDate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 13);\n      i0.ɵɵtext(22, \"Add Team Member\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"p-autoComplete\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateTaskComponent_Template_p_autoComplete_ngModelChange_23_listener($event) {\n        return ctx.task.members = $event;\n      })(\"completeMethod\", function CreateTaskComponent_Template_p_autoComplete_completeMethod_23_listener($event) {\n        return ctx.filterMembers($event);\n      });\n      i0.ɵɵtemplate(24, CreateTaskComponent_ng_template_24_Template, 4, 3, \"ng-template\", 15);\n      i0.ɵɵtemplate(25, CreateTaskComponent_ng_template_25_Template, 4, 3, \"ng-template\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 17)(27, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function CreateTaskComponent_Template_button_click_27_listener() {\n        return ctx.cancelTask();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function CreateTaskComponent_Template_button_click_28_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"header\", ctx.dialogConfig.header || \"\")(\"visible\", ctx.dialogConfig.visible)(\"modal\", true)(\"dismissableMask\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(16, _c0));\n      i0.ɵɵproperty(\"ngModel\", ctx.task.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"showTime\", false)(\"ngModel\", ctx.task.startDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"showTime\", false)(\"ngModel\", ctx.task.endDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.task.members)(\"suggestions\", ctx.filteredMembers)(\"multiple\", true)(\"inputStyle\", i0.ɵɵpureFunction0(17, _c1));\n    }\n  },\n  dependencies: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.ButtonDirective, i6.InputText, i7.Editor, i2.PrimeTemplate, i8.Calendar, i9.Toast, i10.AutoComplete, i11.Dialog, i12.Ripple],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAASA,cAAc,QAAQ,aAAa;;;;;;;;;;;;;;;;ICuBpBC,+BAAqC;IACjCA,0BAAqG;IACrGA,gCAAmC;IAAAA,YAAe;IAAAA,iBAAO;;;;IADpDA,eAAgD;IAAhDA,qGAAgD;IAACA,oCAAmB;IACtCA,eAAe;IAAfA,oCAAe;;;;;IAItDA,+BAAkD;IAC9CA,0BAAqG;IACrGA,gCAAmC;IAAAA,YAAe;IAAAA,iBAAO;;;;IADpDA,eAAgD;IAAhDA,qGAAgD;IAACA,oCAAmB;IACtCA,eAAe;IAAfA,oCAAe;;;;;;;;;;;;;ADnB9E,OAAM,MAAOC,mBAAmB;EAc5BC,YAAoBC,aAA4B,EAAUC,cAA8B,EAAUC,WAAwB;IAAtG,kBAAa,GAAbF,aAAa;IAAyB,mBAAc,GAAdC,cAAc;IAA0B,gBAAW,GAAXC,WAAW;IAV7G,YAAO,GAAa,EAAE;IAEtB,oBAAe,GAAa,EAAE;IAE9B,iBAAY,GAAiB;MAACC,MAAM,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC;IAOrD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACI,aAAa,CAACC,SAAS,CAACC,IAAI,IAAI,IAAI,CAACC,IAAI,GAAGD,IAAI,CAAC;IACtF,IAAI,CAACE,kBAAkB,GAAG,IAAI,CAACR,WAAW,CAACS,aAAa,CAACJ,SAAS,CAACC,IAAI,IAAG;MACtE,IAAI,CAACI,YAAY,GAAGJ,IAAI;MAExB,IAAG,IAAI,CAACI,YAAY,CAACC,OAAO,EAAE;QAC1B,IAAI,CAACC,SAAS,EAAE;;IAExB,CAAC,CAAC;EACN;EAEAC,QAAQ;IACJ,IAAI,CAACf,aAAa,CAACgB,UAAU,EAAE,CAACC,IAAI,CAACC,OAAO,IAAI,IAAI,CAACA,OAAO,GAAGA,OAAO,CAAC;IACvE,IAAI,CAACJ,SAAS,EAAE;EACpB;EAEAK,aAAa,CAACC,KAAU;;IACpB,IAAIC,QAAQ,GAAa,EAAE;IAC3B,IAAIC,KAAK,GAAGF,KAAK,CAACE,KAAK;IAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACL,OAAO,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1C,IAAIE,MAAM,GAAG,IAAI,CAACP,OAAO,CAACK,CAAC,CAAC;MAC5B,IAAI,aAAM,CAACG,IAAI,0CAAEC,WAAW,GAAGC,OAAO,CAACN,KAAK,CAACK,WAAW,EAAE,CAAC,KAAI,CAAC,EAAE;QAC9DN,QAAQ,CAACQ,IAAI,CAACJ,MAAM,CAAC;;;IAI7B,IAAI,CAACK,eAAe,GAAGT,QAAQ;EACnC;EAEAU,IAAI;IACA,IAAI,CAACtB,IAAI,CAACuB,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC;IAC/C,IAAI,CAAClC,cAAc,CAACmC,GAAG,CAAC;MAAEC,QAAQ,EAAE,SAAS;MAAEC,OAAO,EAAE,SAAS;MAAEC,MAAM,EAAE,SAAS,IAAI,CAAC9B,IAAI,CAACiB,IAAI;IAAyB,CAAE,CAAC;IAC9H,IAAI,CAACxB,WAAW,CAACsC,OAAO,CAAC,IAAI,CAAC/B,IAAI,CAAC;IACnC,IAAI,CAACP,WAAW,CAACuC,WAAW,EAAE;EAClC;EAEAC,UAAU;IACN,IAAI,CAAC5B,SAAS,EAAE;IAChB,IAAI,CAACZ,WAAW,CAACuC,WAAW,EAAE;EAClC;EAEA3B,SAAS;IACL,IAAI,CAACL,IAAI,GAAG;MAAEuB,EAAE,EAAE,IAAI,CAACvB,IAAI,IAAI,IAAI,CAACA,IAAI,CAACuB,EAAE,GAAG,IAAI,CAACvB,IAAI,CAACuB,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC;MAAEQ,MAAM,EAAE;IAAS,CAAE;EACtH;EAEAC,WAAW;IACP,IAAI,CAACvC,YAAY,CAACwC,WAAW,EAAE;EACnC;;;mBA9DS/C,mBAAmB;AAAA;;QAAnBA,mBAAmB;EAAAgD;EAAAC,iCAFjB,CAACnD,cAAc,CAAC;EAAAoD;EAAAC;EAAAC;EAAAC;IAAA;MCX/BtD,0BAAmB;MACnBA,mCAAoP;MAArMA;QAAA;MAAA,EAAkC;MAC7EA,8BAAiB;MAG4CA,yBAAS;MAAAA,iBAAQ;MAClEA,gCAAsF;MAA1BA;QAAA;MAAA,EAAuB;MAAnFA,iBAAsF;MAE1FA,8BAA0B;MACkCA,4BAAW;MAAAA,iBAAQ;MAC3EA,oCAAsE;MAA5DA;QAAA;MAAA,EAA8B;MAA8BA,iBAAW;MAErFA,+BAA8B;MACwBA,2BAAU;MAAAA,iBAAQ;MACpEA,uCAA2I;MAA7BA;QAAA;MAAA,EAA4B;MAACA,iBAAa;MAE5JA,+BAA8B;MACsBA,yBAAQ;MAAAA,iBAAQ;MAChEA,uCAAqI;MAA3BA;QAAA;MAAA,EAA0B;MAACA,iBAAa;MAEtJA,+BAA0B;MAC8BA,gCAAe;MAAAA,iBAAQ;MAC3EA,2CAA2P;MAAzMA;QAAA;MAAA,EAA0B;QAAA,OAAmDuD,yBAAqB;MAAA,EAAxE;MACxEvD,uFAKc;MACdA,uFAKc;MAClBA,iBAAiB;MAErBA,gCAAkD;MACkDA;QAAA,OAASuD,gBAAY;MAAA,EAAC;MAACvD,iBAAS;MAChIA,mCAAyG;MAAjBA;QAAA,OAASuD,UAAM;MAAA,EAAC;MAACvD,iBAAS;;;MAtCxHA,eAAoC;MAApCA,sDAAoC;MAK8BA,eAAuB;MAAvBA,uCAAuB;MAI1CA,eAA4B;MAA5BA,0CAA4B;MAA3DA,8CAA8B;MAIUA,eAAkB;MAAlBA,gCAAkB;MAIlBA,eAAkB;MAAlBA,gCAAkB;MAIlBA,eAA0B;MAA1BA,0CAA0B","names":["MessageService","i0","CreateTaskComponent","constructor","memberService","messageService","taskService","header","visible","subscription","selectedTask$","subscribe","data","task","dialogSubscription","dialogSource$","dialogConfig","newTask","resetTask","ngOnInit","getMembers","then","members","filterMembers","event","filtered","query","i","length","member","name","toLowerCase","indexOf","push","filteredMembers","save","id","Math","floor","random","add","severity","summary","detail","addTask","closeDialog","cancelTask","status","ngOnDestroy","unsubscribe","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\tasklist\\create-task\\create-task.component.ts","C:\\Users\\UsuarioPrincipal\\Downloads\\verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\tasklist\\create-task\\create-task.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { Member } from 'src/app/demo/api/member';\nimport { DialogConfig, Task } from 'src/app/demo/api/task';\nimport { TaskService } from '../service/task.service';\nimport { MemberService } from 'src/app/demo/service/member.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-create-task',\n    templateUrl: './create-task.component.html',\n    providers: [MessageService]\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n\n    task!: Task;\n\n    members: Member[] = [];\n\n    filteredMembers: Member[] = [];\n\n    dialogConfig: DialogConfig = {header: '', visible: false};\n\n    subscription: Subscription;\n\n    dialogSubscription: Subscription;\n\n    constructor(private memberService: MemberService, private messageService: MessageService, private taskService: TaskService) {\n        this.subscription = this.taskService.selectedTask$.subscribe(data => this.task = data);\n        this.dialogSubscription = this.taskService.dialogSource$.subscribe(data => {\n            this.dialogConfig = data;\n            \n            if(this.dialogConfig.newTask) {\n                this.resetTask();\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.memberService.getMembers().then(members => this.members = members);\n        this.resetTask();\n    }\n\n    filterMembers(event: any) {\n        let filtered: Member[] = [];\n        let query = event.query;\n\n        for (let i = 0; i < this.members.length; i++) {\n            let member = this.members[i];\n            if (member.name?.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n                filtered.push(member);\n            }\n        }\n\n        this.filteredMembers = filtered;\n    }\n\n    save() {\n        this.task.id = Math.floor(Math.random() * 1000);\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: `Task \"${this.task.name}\" created successfully.` });\n        this.taskService.addTask(this.task);\n        this.taskService.closeDialog();\n    }\n\n    cancelTask(){\n        this.resetTask()\n        this.taskService.closeDialog();\n    }\n\n    resetTask() {\n        this.task = { id: this.task && this.task.id ? this.task.id : Math.floor(Math.random() * 1000), status: 'Waiting' };\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    \n}\n","<p-toast></p-toast>\n<p-dialog [header]=\"dialogConfig.header || ''\" [(visible)]=\"dialogConfig.visible\" [modal]=\"true\" [dismissableMask]=\"true\" styleClass=\"mx-3 sm:mx-0 sm:w-full md:w-8 lg:w-6\" contentStyleClass=\"border-round-bottom border-top-1 surface-border p-0\">\n    <div class=\"p-4\">\n        <div class=\"grid p-fluid formgrid\">\n            <div class=\"col-12 field\">\n                <label for=\"name\" class=\"text-900 font-semibold\">Task Name</label>\n                <input id=\"name\" type=\"text\" placeholder=\"Title\" pInputText [(ngModel)]=\"task.name\" />\n            </div>\n            <div class=\"col-12 field\">\n                <label for=\"description\" class=\"text-900 font-semibold\">Description</label>\n                <p-editor [(ngModel)]=\"task.description\" [style]=\"{'height':'150px'}\"></p-editor>\n            </div>\n            <div class=\"col-6 field mt-0\">\n                <label for=\"start\" class=\"text-900 font-semibold\">Start Date</label>\n                <p-calendar appendTo=\"body\" dateFormat=\"yy-mm-dd\" [showTime]=\"false\" inputId=\"start\" placeholder=\"Start Date\" [(ngModel)]=\"task.startDate\"></p-calendar>\n            </div>\n            <div class=\"col-6 field mt-0\">\n                <label for=\"end\" class=\"text-900 font-semibold\">Due Date</label>\n                <p-calendar appendTo=\"body\" dateFormat=\"yy-mm-dd\" [showTime]=\"false\" inputId=\"end\" placeholder=\"Due Date\" [(ngModel)]=\"task.endDate\"></p-calendar>\n            </div>\n            <div class=\"col-12 field\">\n                <label for=\"members\" class=\"text-900 font-semibold\">Add Team Member</label>\n                <p-autoComplete appendTo=\"body\" inputId=\"members\" [(ngModel)]=\"task.members\" [suggestions]=\"filteredMembers\" (completeMethod)=\"filterMembers($event)\" field=\"name\" [multiple]=\"true\" placeholder=\"Choose team members\" [inputStyle]=\"{'height': '2.5rem'}\">\n                    <ng-template let-member pTemplate=\"selectedItem\">\n                        <div class=\"flex align-items-center\">\n                            <img src=\"assets/demo/images/avatar/{{member.image}}\" [alt]=\"member.name\" class=\"h-2rem w-2rem mr-2\">\n                            <span class=\"text-900 font-medium\">{{member.name}}</span>\n                        </div>\n                    </ng-template>\n                    <ng-template let-member pTemplate=\"item\">\n                        <div class=\"flex align-items-center border-round\">\n                            <img src=\"assets/demo/images/avatar/{{member.image}}\" [alt]=\"member.name\" class=\"h-2rem w-2rem mr-2\">\n                            <span class=\"text-900 font-medium\">{{member.name}}</span>\n                        </div>\n                    </ng-template>\n                </p-autoComplete>\n            </div>\n            <div class=\"col-12 flex justify-content-end mt-4\">\n                <button pButton pRipple class=\"p-button-outlined w-8rem mr-3\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"cancelTask()\"></button>\n                <button pButton pRipple class=\"p-button-primary w-8rem\" icon=\"pi pi-check\" label=\"Save\" (click)=\"save()\"></button>\n            </div>\n        </div>\n    </div>\n</p-dialog>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}