{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/inputtext\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/api\";\nimport * as i7 from \"primeng/overlaypanel\";\nimport * as i8 from \"primeng/ripple\";\nfunction ChatBoxComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 24);\n    i0.ɵɵelement(2, \"img\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 26)(4, \"p\", 27);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 28);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 29);\n    i0.ɵɵtext(9);\n    i0.ɵɵelement(10, \"i\", 30);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"assets/demo/images/avatar/\", ctx_r5.user.image, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r5.user.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r4.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.parseDate(message_r4.createdAt));\n  }\n}\nfunction ChatBoxComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 31)(2, \"span\", 32);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 29);\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"i\", 30);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r4.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.parseDate(message_r4.createdAt), \" \");\n  }\n}\nfunction ChatBoxComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ChatBoxComponent_div_15_div_1_Template, 11, 4, \"div\", 22);\n    i0.ɵɵtemplate(2, ChatBoxComponent_div_15_div_2_Template, 7, 2, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r4.ownerId !== 123);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r4.ownerId === ctx_r1.defaultUserId);\n  }\n}\nfunction ChatBoxComponent_ng_template_24_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ChatBoxComponent_ng_template_24_button_0_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const emoji_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      const _r2 = i0.ɵɵreference(23);\n      _r2.hide();\n      return i0.ɵɵresetView(ctx_r11.onEmojiSelect(emoji_r10));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emoji_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", emoji_r10);\n  }\n}\nfunction ChatBoxComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ChatBoxComponent_ng_template_24_button_0_Template, 1, 1, \"button\", 33);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.emojis);\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"bg-green-400\": a0,\n    \"bg-red-400\": a1,\n    \"bg-yellow-400\": a2\n  };\n};\nexport class ChatBoxComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.defaultUserId = 123;\n    this.textContent = '';\n    this.uploadedFiles = [];\n    this.emojis = ['😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😇', '😉', '😊', '🙂', '🙃', '😋', '😌', '😍', '🥰', '😘', '😗', '😙', '😚', '🤪', '😜', '😝', '😛', '🤑', '😎', '🤓', '🧐', '🤠', '🥳', '🤗', '🤡', '😏', '😶', '😐', '😑', '😒', '🙄', '🤨', '🤔', '🤫', '🤭', '🤥', '😳', '😞', '😟', '😠', '😡', '🤬', '😔', '😟', '😠', '😡', '🤬', '😔', '😕', '🙁', '😬', '🥺', '😣', '😖', '😫', '😩', '🥱', '😤', '😮', '😱', '😨', '😰', '😯', '😦', '😧', '😢', '😥', '😪', '🤤'];\n  }\n  setMessage() {\n    if (this.user) {\n      let filteredMessages = this.user.messages.filter(m => m.ownerId !== this.defaultUserId);\n      this.message = filteredMessages[filteredMessages.length - 1];\n    }\n  }\n  ngOnInit() {\n    this.setMessage();\n  }\n  sendMessage() {\n    if (this.textContent == '' || this.textContent === ' ') {\n      return;\n    } else {\n      let message = {\n        text: this.textContent,\n        ownerId: 123,\n        createdAt: new Date().getTime()\n      };\n      this.chatService.sendMessage(message);\n      this.textContent = '';\n    }\n  }\n  onEmojiSelect(emoji) {\n    this.textContent += emoji;\n  }\n  parseDate(timestamp) {\n    return new Date(timestamp).toTimeString().split(':').slice(0, 2).join(':');\n  }\n}\nChatBoxComponent.ɵfac = function ChatBoxComponent_Factory(t) {\n  return new (t || ChatBoxComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\nChatBoxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatBoxComponent,\n  selectors: [[\"app-chat-box\"]],\n  inputs: {\n    user: \"user\"\n  },\n  decls: 25,\n  vars: 10,\n  consts: [[1, \"flex\", \"flex-column\", \"h-full\"], [1, \"flex\", \"align-items-center\", \"border-bottom-1\", \"surface-border\", \"p-3\", \"lg:p-6\"], [1, \"relative\", \"flex\", \"align-items-center\", \"mr-3\"], [\"alt\", \"user.name\", 1, \"w-4rem\", \"h-4rem\", \"border-circle\", \"shadow-4\", 3, \"src\"], [1, \"w-1rem\", \"h-1rem\", \"border-circle\", \"border-2\", \"surface-border\", \"absolute\", \"bottom-0\", \"right-0\", 3, \"ngClass\"], [1, \"mr-2\"], [1, \"text-900\", \"font-semibold\", \"block\"], [1, \"text-700\"], [1, \"flex\", \"align-items-center\", \"ml-auto\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-phone\", 1, \"p-button-rounded\", \"p-button-outlined\", \"p-button-secondary\", \"mr-3\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-ellipsis-v\", 1, \"p-button-rounded\", \"p-button-outlined\", \"p-button-secondary\"], [1, \"p-3\", \"md:px-4\", \"lg:px-6\", \"lg:py-4\", \"mt-2\", \"overflow-y-auto\", 2, \"max-height\", \"53vh\", 3, \"scrollTop\"], [\"chatWindow\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"p-3\", \"md:p-4\", \"lg:p-6\", \"flex\", \"flex-column\", \"sm:flex-row\", \"align-items-center\", \"mt-auto\", \"border-top-1\", \"surface-border\", \"gap-3\"], [\"id\", \"message\", \"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"Type a message\", 1, \"flex-1\", \"w-full\", \"sm:w-auto\", \"border-round\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\"], [1, \"flex\", \"w-full\", \"sm:w-auto\", \"gap-3\"], [\"pRipple\", \"\", 1, \"p-button\", \"p-button-secondary\", \"w-full\", \"sm:w-auto\", \"justify-content-center\", \"text-xl\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Send\", \"icon\", \"pi pi-send\", 1, \"w-full\", \"sm:w-auto\", 3, \"click\"], [\"styleClass\", \"w-full sm:w-30rem\"], [\"op\", \"\"], [\"pTemplate\", \"\"], [\"class\", \"grid grid-nogutter mb-4\", 4, \"ngIf\"], [1, \"grid\", \"grid-nogutter\", \"mb-4\"], [1, \"mr-3\", \"mt-1\"], [\"alt\", \"user.name\", 1, \"w-3rem\", \"h-3rem\", \"border-circle\", \"shadow-4\", 3, \"src\"], [1, \"col\", \"mt-3\"], [1, \"text-900\", \"font-semibold\", \"mb-3\"], [1, \"text-700\", \"inline-block\", \"font-medium\", \"border-1\", \"surface-border\", \"p-3\", \"white-space-normal\", \"border-round\", 2, \"word-break\", \"break-word\", \"max-width\", \"80%\"], [1, \"text-700\", \"mt-3\"], [1, \"pi\", \"pi-check\", \"ml-2\", \"text-green-400\"], [1, \"col\", \"mt-3\", \"text-right\"], [1, \"inline-block\", \"text-left\", \"font-medium\", \"border-1\", \"surface-border\", \"bg-primary-100\", \"text-primary-900\", \"p-3\", \"white-space-normal\", \"border-round\", 2, \"word-break\", \"break-word\", \"max-width\", \"80%\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"class\", \"p-2 p-button-text text-2xl\", 3, \"label\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", 1, \"p-2\", \"p-button-text\", \"text-2xl\", 3, \"label\", \"click\"]],\n  template: function ChatBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r13 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"img\", 3)(4, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"span\", 6);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"span\", 7);\n      i0.ɵɵtext(9, \"Last active 1 hour ago\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 8);\n      i0.ɵɵelement(11, \"button\", 9)(12, \"button\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 11, 12);\n      i0.ɵɵtemplate(15, ChatBoxComponent_div_15_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 14)(17, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatBoxComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.textContent = $event;\n      })(\"keydown.enter\", function ChatBoxComponent_Template_input_keydown_enter_17_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 16)(19, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function ChatBoxComponent_Template_button_click_19_listener($event) {\n        i0.ɵɵrestoreView(_r13);\n        const _r2 = i0.ɵɵreference(23);\n        return i0.ɵɵresetView(_r2.toggle($event));\n      });\n      i0.ɵɵtext(20, \"\\uD83D\\uDE00\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function ChatBoxComponent_Template_button_click_21_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(22, \"p-overlayPanel\", 19, 20);\n      i0.ɵɵtemplate(24, ChatBoxComponent_ng_template_24_Template, 1, 1, \"ng-template\", 21);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(14);\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate1(\"src\", \"assets/demo/images/avatar/\", ctx.user.image, \"\", i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(6, _c0, ctx.user.status === \"active\", ctx.user.status === \"busy\", ctx.user.status === \"away\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.user.name);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"scrollTop\", _r0.scrollHeight);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.user.messages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.textContent);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.InputText, i5.ButtonDirective, i6.PrimeTemplate, i7.OverlayPanel, i8.Ripple],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"mappings":"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","names":["i0","_r2","ChatBoxComponent","constructor","chatService","setMessage","user","filteredMessages","messages","filter","m","ownerId","defaultUserId","message","length","ngOnInit","sendMessage","textContent","text","createdAt","Date","getTime","onEmojiSelect","emoji","parseDate","timestamp","toTimeString","split","slice","join","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\chat\\chat-box\\chat-box.component.html","C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\chat\\chat-box\\chat-box.component.ts"],"sourcesContent":["<div class=\"flex flex-column h-full\">\n    <div class=\"flex align-items-center border-bottom-1 surface-border p-3 lg:p-6\">\n        <div class=\"relative flex align-items-center mr-3\">\n            <img src=\"assets/demo/images/avatar/{{user.image}}\" alt=\"user.name\" class=\"w-4rem h-4rem border-circle shadow-4\">\n            <span class=\"w-1rem h-1rem border-circle border-2 surface-border absolute bottom-0 right-0\" [ngClass]=\"{'bg-green-400': user.status === 'active', 'bg-red-400': user.status === 'busy', 'bg-yellow-400': user.status === 'away'}\"></span>\n        </div>\n        <div class=\"mr-2\">\n            <span class=\"text-900 font-semibold block\">{{user.name}}</span>\n            <span class=\"text-700\">Last active 1 hour ago</span>\n        </div>\n        <div class=\"flex align-items-center ml-auto\">\n            <button pButton pRipple type=\"button\" icon=\"pi pi-phone\" class=\"p-button-rounded p-button-outlined p-button-secondary mr-3\"></button>\n            <button pButton pRipple type=\"button\" icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-outlined p-button-secondary\"></button>\n        </div>\n    </div>\n    <div class=\"p-3 md:px-4 lg:px-6 lg:py-4 mt-2 overflow-y-auto\" style=\"max-height: 53vh;\" #chatWindow [scrollTop]=\"chatWindow.scrollHeight\">\n        <div *ngFor=\"let message of user.messages\">\n            <div *ngIf=\"message.ownerId !== 123\" class=\"grid grid-nogutter mb-4\">\n                <div class=\"mr-3 mt-1\">\n                    <img src=\"assets/demo/images/avatar/{{user.image}}\" alt=\"user.name\" class=\"w-3rem h-3rem border-circle shadow-4\">\n                </div>\n                <div class=\"col mt-3\">\n                    <p class=\"text-900 font-semibold mb-3\">{{user.name}}</p>\n                    <span class=\"text-700 inline-block font-medium border-1 surface-border p-3 white-space-normal border-round\" style=\"word-break: break-word; max-width:80%;\">{{message.text}}</span>\n                    <p class=\"text-700 mt-3\">{{parseDate(message.createdAt)}}<i class=\"pi pi-check ml-2 text-green-400\"></i></p>\n                </div>\n            </div>\n\n            <div *ngIf=\"message.ownerId === defaultUserId\" class=\"grid grid-nogutter mb-4\">\n                <div class=\"col mt-3 text-right\">\n                    <span class=\"inline-block text-left font-medium border-1 surface-border bg-primary-100 text-primary-900 p-3 white-space-normal border-round\" style=\"word-break: break-word; max-width:80%;\">{{message.text}}</span>\n                    <p class=\"text-700 mt-3\">{{parseDate(message.createdAt)}} <i class=\"pi pi-check ml-2 text-green-400\"></i></p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"p-3 md:p-4 lg:p-6 flex flex-column sm:flex-row align-items-center mt-auto border-top-1 surface-border gap-3\">\n        <input id=\"message\" type=\"text\" pInputText placeholder=\"Type a message\" class=\"flex-1 w-full sm:w-auto border-round\" [(ngModel)]=\"textContent\" (keydown.enter)=\"sendMessage()\"/>\n        <div class=\"flex w-full sm:w-auto gap-3\">\n            <button pRipple class=\"p-button p-button-secondary w-full sm:w-auto justify-content-center text-xl\" (click)=\"op.toggle($event)\">😀</button>\n            <button pButton pRipple label=\"Send\" icon=\"pi pi-send\" class=\"w-full sm:w-auto\" (click)=\"sendMessage()\"></button>\n        </div>\n    </div>\n</div>\n\n<p-overlayPanel #op styleClass=\"w-full sm:w-30rem\">\n    <ng-template pTemplate>\n        <button *ngFor=\"let emoji of emojis;\" pButton pRipple (click)=\"op.hide(); onEmojiSelect(emoji)\" type=\"button\" [label]=\"emoji\" class=\"p-2 p-button-text text-2xl\"></button>\n    </ng-template>\n</p-overlayPanel>","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Message } from 'src/app/demo/api/message';\nimport { User } from 'src/app/demo/api/user';\nimport { ChatService } from '../service/chat.service';\n\n@Component({\n    selector: 'app-chat-box',\n    templateUrl: './chat-box.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChatBoxComponent implements OnInit {\n\n    defaultUserId: number = 123;\n\n    message!: Message;\n\n    textContent: string = '';\n\n    uploadedFiles: any[] = [];\n\n    emojis = [\n        '😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😇', '😉', '😊', '🙂', '🙃', '😋', '😌', '😍', '🥰', '😘', '😗', '😙', '😚', '🤪', '😜', '😝', '😛',\n        '🤑', '😎', '🤓', '🧐', '🤠', '🥳', '🤗', '🤡', '😏', '😶', '😐', '😑', '😒', '🙄', '🤨', '🤔', '🤫', '🤭', '🤥', '😳', '😞', '😟', '😠', '😡', '🤬', '😔',\n        '😟', '😠', '😡', '🤬', '😔', '😕', '🙁', '😬', '🥺', '😣', '😖', '😫', '😩', '🥱', '😤', '😮', '😱', '😨', '😰', '😯', '😦', '😧', '😢', '😥', '😪', '🤤'\n    ];\n\n    @Input() user!: User;\n\n    constructor(private chatService: ChatService) { }\n\n    setMessage() {\n        if (this.user) {\n            let filteredMessages = this.user.messages.filter(m => m.ownerId !== this.defaultUserId);\n            this.message = filteredMessages[filteredMessages.length - 1];\n        }\n    }\n\n    ngOnInit(): void {\n        this.setMessage();\n    }\n\n    sendMessage() {\n        if (this.textContent == '' || this.textContent === ' ') {\n            return;\n        }\n        else {\n            let message = {\n                text: this.textContent,\n                ownerId: 123,\n                createdAt: new Date().getTime(),\n            }\n\n            this.chatService.sendMessage(message)\n            this.textContent = '';\n        }\n    }\n\n    onEmojiSelect(emoji: string) {\n        this.textContent += emoji;\n    }\n\n    parseDate(timestamp: number) {\n        return new Date(timestamp).toTimeString().split(':').slice(0, 2).join(':');\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}