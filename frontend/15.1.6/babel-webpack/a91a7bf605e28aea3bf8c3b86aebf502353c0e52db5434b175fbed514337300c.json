{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatService {\n  constructor(http) {\n    this.http = http;\n    this._activeUser = {\n      \"id\": 1,\n      \"name\": \"Ioni Bowcher\",\n      \"image\": \"ionibowcher.png\",\n      \"status\": \"active\",\n      \"messages\": [{\n        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n        \"ownerId\": 1,\n        \"createdAt\": 1652646338240\n      }, {\n        \"text\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\",\n        \"ownerId\": 1,\n        \"createdAt\": 1652646368718\n      }, {\n        \"text\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\",\n        \"ownerId\": 123,\n        \"createdAt\": 1652646368718\n      }],\n      \"lastSeen\": \"2d\"\n    };\n    this.activeUser = new BehaviorSubject(this._activeUser);\n    this.activeUser$ = this.activeUser.asObservable();\n  }\n  getChatData() {\n    return this.http.get('assets/demo/data/chat.json').toPromise().then(res => res.data).then(data => data);\n  }\n  changeActiveChat(user) {\n    this._activeUser = user;\n    this.activeUser.next(user);\n  }\n  sendMessage(message) {\n    this._activeUser.messages.push(message);\n    this.activeUser.next(this._activeUser);\n  }\n}\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n};\nChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,WAAW;EA+BpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IA7BxB,gBAAW,GAAS;MAChB,IAAI,EAAE,CAAC;MACP,MAAM,EAAE,cAAc;MACtB,OAAO,EAAE,iBAAiB;MAC1B,QAAQ,EAAE,QAAQ;MAClB,UAAU,EAAE,CACR;QACI,MAAM,EAAE,yDAAyD;QACjE,SAAS,EAAE,CAAC;QACZ,WAAW,EAAE;OAChB,EACD;QACI,MAAM,EAAE,mEAAmE;QAC3E,SAAS,EAAE,CAAC;QACZ,WAAW,EAAE;OAChB,EACD;QACI,MAAM,EAAE,mEAAmE;QAC3E,SAAS,EAAE,GAAG;QACd,WAAW,EAAE;OAChB,CACJ;MACD,UAAU,EAAE;KACf;IAEO,eAAU,GAAG,IAAIH,eAAe,CAAO,IAAI,CAACI,WAAW,CAAC;IAEhE,gBAAW,GAAG,IAAI,CAACC,UAAU,CAACC,YAAY,EAAE;EAEJ;EAExCC,WAAW;IACP,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,4BAA4B,CAAC,CAClDC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAa,CAAC,CAC9BF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAC,gBAAgB,CAACC,IAAU;IACvB,IAAI,CAACV,WAAW,GAAGU,IAAI;IACvB,IAAI,CAACT,UAAU,CAACU,IAAI,CAACD,IAAI,CAAC;EAC9B;EAEAE,WAAW,CAACC,OAAgB;IACxB,IAAI,CAACb,WAAW,CAACc,QAAQ,CAACC,IAAI,CAACF,OAAO,CAAC;IACvC,IAAI,CAACZ,UAAU,CAACU,IAAI,CAAC,IAAI,CAACX,WAAW,CAAC;EAC1C;;;mBAhDSH,WAAW;AAAA;;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;AAAA","names":["BehaviorSubject","ChatService","constructor","http","_activeUser","activeUser","asObservable","getChatData","get","toPromise","then","res","data","changeActiveChat","user","next","sendMessage","message","messages","push","factory"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\chat\\service\\chat.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Message } from 'src/app/demo/api/message';\nimport { User } from 'src/app/demo/api/user';\n\n@Injectable()\nexport class ChatService {\n\n    _activeUser: User = {\n        \"id\": 1,\n        \"name\": \"Ioni Bowcher\",\n        \"image\": \"ionibowcher.png\",\n        \"status\": \"active\",\n        \"messages\": [\n            {\n                \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n                \"ownerId\": 1,\n                \"createdAt\": 1652646338240\n            },\n            {\n                \"text\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\",\n                \"ownerId\": 1,\n                \"createdAt\": 1652646368718\n            },\n            {\n                \"text\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\",\n                \"ownerId\": 123,\n                \"createdAt\": 1652646368718\n            },\n        ],\n        \"lastSeen\": \"2d\"\n    }\n\n    private activeUser = new BehaviorSubject<User>(this._activeUser);\n\n    activeUser$ = this.activeUser.asObservable();\n\n    constructor(private http: HttpClient) { }\n\n    getChatData() {\n        return this.http.get<any>('assets/demo/data/chat.json')\n            .toPromise()\n            .then(res => res.data as any[])\n            .then(data => data);\n    }\n\n    changeActiveChat(user: User) {\n        this._activeUser = user;\n        this.activeUser.next(user);\n    }\n\n    sendMessage(message: Message) {\n        this._activeUser.messages.push(message);\n        this.activeUser.next(this._activeUser);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}