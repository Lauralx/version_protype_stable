{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  getProductsSmall() {\n    return this.http.get('assets/demo/data/products-small.json').toPromise().then(res => res.data).then(data => data);\n  }\n  getProducts() {\n    return this.http.get('assets/demo/data/products.json').toPromise().then(res => res.data).then(data => data);\n  }\n  getProductsMixed() {\n    return this.http.get('assets/demo/data/products-mixed.json').toPromise().then(res => res.data).then(data => data);\n  }\n  getProductsWithOrdersSmall() {\n    return this.http.get('assets/demo/data/products-orders-small.json').toPromise().then(res => res.data).then(data => data);\n  }\n  getProductsWithOrdersLarge() {\n    return this.http.get('assets/demo/data/products-orders.json').toPromise().then(res => res.data).then(data => data);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,gBAAgB;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,sCAAsC,CAAC,CAC5DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAiB,CAAC,CAClCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAC,WAAW;IACP,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAM,gCAAgC,CAAC,CACtDC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAiB,CAAC,CAClCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAE,gBAAgB;IACZ,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAM,sCAAsC,CAAC,CAC5DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAiB,CAAC,CAClCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAG,0BAA0B;IACtB,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAM,6CAA6C,CAAC,CACnEC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAiB,CAAC,CAClCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAI,0BAA0B;IACtB,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAiB,CAAC,CAClCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;EAC3B;;;mBArCSR,cAAc;AAAA;;SAAdA,cAAc;EAAAa,SAAdb,cAAc;EAAAc,YAFX;AAAM","names":["ProductService","constructor","http","getProductsSmall","get","toPromise","then","res","data","getProducts","getProductsMixed","getProductsWithOrdersSmall","getProductsWithOrdersLarge","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\service\\product.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Product } from 'src/app/demo/api/product';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProductService {\n\n    constructor(private http: HttpClient) { }\n\n    getProductsSmall() {\n        return this.http.get<any>('assets/demo/data/products-small.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n\n    getProducts() {\n        return this.http.get<any>('assets/demo/data/products.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n\n    getProductsMixed() {\n        return this.http.get<any>('assets/demo/data/products-mixed.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n\n    getProductsWithOrdersSmall() {\n        return this.http.get<any>('assets/demo/data/products-orders-small.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n\n    getProductsWithOrdersLarge() {\n        return this.http.get<any>('assets/demo/data/products-orders.json')\n            .toPromise()\n            .then(res => res.data as Product[])\n            .then(data => data);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}