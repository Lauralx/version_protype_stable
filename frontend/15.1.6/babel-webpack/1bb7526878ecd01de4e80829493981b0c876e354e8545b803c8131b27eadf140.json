{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/app.layout.service\";\nimport * as i2 from \"../app.menu.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"primeng/sidebar\";\nimport * as i6 from \"primeng/radiobutton\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/inputswitch\";\nfunction AppConfigComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h5\");\n    i0.ɵɵtext(2, \"Menu Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5)(5, \"p-radioButton\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_ng_container_3_Template_p_radioButton_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.menuMode = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"label\", 23);\n    i0.ɵɵtext(7, \"Static\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"p-radioButton\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_ng_container_3_Template_p_radioButton_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.menuMode = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 25);\n    i0.ɵɵtext(11, \"Slim\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(12, \"hr\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.menuMode);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.menuMode);\n  }\n}\nfunction AppConfigComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h5\");\n    i0.ɵɵtext(2, \"Layout Theme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 27)(4, \"p-radioButton\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_ng_container_15_Template_p_radioButton_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.menuTheme = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 29);\n    i0.ɵɵtext(6, \"Color Scheme\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 27)(8, \"p-radioButton\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_ng_container_15_Template_p_radioButton_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.menuTheme = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 31);\n    i0.ɵɵtext(10, \"Primary Color (Light Only)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.menuTheme);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.menuTheme)(\"disabled\", ctx_r1.colorScheme === \"dark\");\n  }\n}\nfunction AppConfigComponent_div_19_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 34);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"background-color\": a0,\n    \"color\": a1\n  };\n};\nfunction AppConfigComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 32);\n    i0.ɵɵlistener(\"click\", function AppConfigComponent_div_19_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const theme_r10 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.changeTheme(theme_r10.name));\n    });\n    i0.ɵɵtemplate(2, AppConfigComponent_div_19_i_2_Template, 1, 0, \"i\", 33);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const theme_r10 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(2, _c0, ctx_r2.colorScheme === \"light\" ? theme_r10.lightColor : theme_r10.darkColor, ctx_r2.colorScheme === \"light\" ? \"#ffffff\" : \"#000000\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentTheme === theme_r10.name);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"text-primary-500\": a0\n  };\n};\nfunction AppConfigComponent_i_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 35);\n  }\n  if (rf & 2) {\n    const s_r14 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c1, s_r14 === ctx_r3.scale));\n  }\n}\nexport class AppConfigComponent {\n  constructor(layoutService, menuService) {\n    this.layoutService = layoutService;\n    this.menuService = menuService;\n    this.minimal = false;\n    this.componentThemes = [];\n    this.scales = [12, 13, 14, 15, 16];\n  }\n  ngOnInit() {\n    this.componentThemes = [{\n      name: 'indigo',\n      lightColor: '#4C63B6',\n      darkColor: '#6A7EC2'\n    }, {\n      name: 'blue',\n      lightColor: '#1992D4',\n      darkColor: '#3BABE8'\n    }, {\n      name: 'green',\n      lightColor: '#27AB83',\n      darkColor: '#44D4A9'\n    }, {\n      name: 'deeppurple',\n      lightColor: '#896FF4',\n      darkColor: '#B1A0F8'\n    }, {\n      name: 'orange',\n      lightColor: '#DE911D',\n      darkColor: '#E8AB4F'\n    }, {\n      name: 'cyan',\n      lightColor: '#00B9C6',\n      darkColor: '#58CDD5'\n    }, {\n      name: 'yellow',\n      lightColor: '#F9C404',\n      darkColor: '#FDDD68'\n    }, {\n      name: 'pink',\n      lightColor: '#C74B95',\n      darkColor: '#D77FB4'\n    }, {\n      name: 'purple',\n      lightColor: '#BA6FF4',\n      darkColor: '#D1A0F8'\n    }, {\n      name: 'lime',\n      lightColor: '#84BD20',\n      darkColor: '#A3D44E'\n    }];\n  }\n  changeColorScheme(colorScheme) {\n    const themeLink = document.getElementById('theme-link');\n    const themeLinkHref = themeLink.getAttribute('href');\n    const currentColorScheme = 'theme-' + this.layoutService.config.colorScheme;\n    const newColorScheme = 'theme-' + colorScheme;\n    const newHref = themeLinkHref.replace(currentColorScheme, newColorScheme);\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n  changeTheme(theme) {\n    const themeLink = document.getElementById('theme-link');\n    const newHref = themeLink.getAttribute('href').replace(this.layoutService.config.theme, theme);\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n  replaceThemeLink(href, onComplete) {\n    const id = 'theme-link';\n    const themeLink = document.getElementById(id);\n    const cloneLinkElement = themeLink.cloneNode(true);\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n    themeLink.parentNode.insertBefore(cloneLinkElement, themeLink.nextSibling);\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n  isIE() {\n    return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent);\n  }\n  onConfigButtonClick() {\n    this.layoutService.showConfigSidebar();\n  }\n  get currentTheme() {\n    return this.layoutService.config.theme;\n  }\n  get colorScheme() {\n    return this.layoutService.config.colorScheme;\n  }\n  set colorScheme(_val) {\n    this.changeColorScheme(_val);\n  }\n  get visible() {\n    return this.layoutService.state.configSidebarVisible;\n  }\n  set visible(_val) {\n    this.layoutService.state.configSidebarVisible = _val;\n  }\n  get scale() {\n    return this.layoutService.config.scale;\n  }\n  set scale(_val) {\n    this.layoutService.config.scale = _val;\n  }\n  get menuTheme() {\n    return this.layoutService.config.layoutTheme;\n  }\n  set menuTheme(_val) {\n    this.layoutService.config.layoutTheme = _val;\n  }\n  get menuMode() {\n    return this.layoutService.config.menuMode;\n  }\n  set menuMode(_val) {\n    this.layoutService.config.menuMode = _val;\n    if (this.layoutService.isSlim()) {\n      this.menuService.reset();\n    }\n  }\n  get inputStyle() {\n    return this.layoutService.config.inputStyle;\n  }\n  set inputStyle(_val) {\n    this.layoutService.config.inputStyle = _val;\n  }\n  get ripple() {\n    return this.layoutService.config.ripple;\n  }\n  set ripple(_val) {\n    this.layoutService.config.ripple = _val;\n  }\n  decrementScale() {\n    this.scale--;\n    this.applyScale();\n  }\n  incrementScale() {\n    this.scale++;\n    this.applyScale();\n  }\n  applyScale() {\n    document.documentElement.style.fontSize = this.scale + 'px';\n  }\n}\nAppConfigComponent.ɵfac = function AppConfigComponent_Factory(t) {\n  return new (t || AppConfigComponent)(i0.ɵɵdirectiveInject(i1.LayoutService), i0.ɵɵdirectiveInject(i2.MenuService));\n};\nAppConfigComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppConfigComponent,\n  selectors: [[\"app-config\"]],\n  inputs: {\n    minimal: \"minimal\"\n  },\n  decls: 41,\n  vars: 13,\n  consts: [[\"type\", \"button\", 1, \"layout-config-button\", \"p-link\", 3, \"click\"], [1, \"pi\", \"pi-cog\"], [\"position\", \"right\", \"styleClass\", \"layout-config-sidebar w-18rem\", 3, \"visible\", \"transitionOptions\", \"visibleChange\"], [4, \"ngIf\"], [1, \"flex\"], [1, \"field-radiobutton\", \"flex-1\"], [\"name\", \"colorScheme\", \"value\", \"light\", \"inputId\", \"scheme1\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"scheme1\"], [\"name\", \"colorScheme\", \"value\", \"dark\", \"inputId\", \"scheme2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"scheme2\"], [1, \"flex\", \"flex-wrap\", \"gap-3\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"align-items-center\"], [\"icon\", \"pi pi-minus\", \"type\", \"button\", \"pButton\", \"\", 1, \"p-button-text\", \"p-button-rounded\", \"w-2rem\", \"h-2rem\", \"mr-2\", 3, \"disabled\", \"click\"], [1, \"flex\", \"gap-3\", \"align-items-center\"], [\"class\", \"pi pi-circle-fill text-300\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"icon\", \"pi pi-plus\", \"type\", \"button\", \"pButton\", \"\", 1, \"p-button-text\", \"p-button-rounded\", \"w-2rem\", \"h-2rem\", \"ml-2\", 3, \"disabled\", \"click\"], [\"name\", \"inputStyle\", \"value\", \"outlined\", \"inputId\", \"inputStyle1\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputStyle1\"], [\"name\", \"inputStyle\", \"value\", \"filled\", \"inputId\", \"inputStyle2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"inputStyle2\"], [3, \"ngModel\", \"ngModelChange\"], [\"name\", \"menuMode\", \"value\", \"static\", \"inputId\", \"mode1\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"mode1\"], [\"name\", \"menuMode\", \"value\", \"slim\", \"inputId\", \"mode2\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"mode2\"], [1, \"surface-border\"], [1, \"field-radiobutton\"], [\"name\", \"menuTheme\", \"value\", \"colorScheme\", \"inputId\", \"menutheme-colorscheme\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"menutheme-colorscheme\"], [\"name\", \"menuTheme\", \"value\", \"primaryColor\", \"inputId\", \"menutheme-primarycolor\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"for\", \"menutheme-primarycolor\"], [1, \"inline-flex\", \"justify-content-center\", \"align-items-center\", \"w-2rem\", \"h-2rem\", \"border-round\", 2, \"cursor\", \"pointer\", 3, \"ngStyle\", \"click\"], [\"class\", \"pi pi-check\", 4, \"ngIf\"], [1, \"pi\", \"pi-check\"], [1, \"pi\", \"pi-circle-fill\", \"text-300\", 3, \"ngClass\"]],\n  template: function AppConfigComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AppConfigComponent_Template_button_click_0_listener() {\n        return ctx.onConfigButtonClick();\n      });\n      i0.ɵɵelement(1, \"i\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p-sidebar\", 2);\n      i0.ɵɵlistener(\"visibleChange\", function AppConfigComponent_Template_p_sidebar_visibleChange_2_listener($event) {\n        return ctx.visible = $event;\n      });\n      i0.ɵɵtemplate(3, AppConfigComponent_ng_container_3_Template, 13, 2, \"ng-container\", 3);\n      i0.ɵɵelementStart(4, \"h5\");\n      i0.ɵɵtext(5, \"Color Scheme\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"p-radioButton\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_8_listener($event) {\n        return ctx.colorScheme = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Light\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"p-radioButton\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_12_listener($event) {\n        return ctx.colorScheme = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Dark\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(15, AppConfigComponent_ng_container_15_Template, 11, 3, \"ng-container\", 3);\n      i0.ɵɵelementStart(16, \"h5\");\n      i0.ɵɵtext(17, \"Themes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 10);\n      i0.ɵɵtemplate(19, AppConfigComponent_div_19_Template, 3, 5, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"h5\");\n      i0.ɵɵtext(21, \"Scale\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 12)(23, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function AppConfigComponent_Template_button_click_23_listener() {\n        return ctx.decrementScale();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 14);\n      i0.ɵɵtemplate(25, AppConfigComponent_i_25_Template, 1, 3, \"i\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function AppConfigComponent_Template_button_click_26_listener() {\n        return ctx.incrementScale();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"h5\");\n      i0.ɵɵtext(28, \"Input Style\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 4)(30, \"div\", 5)(31, \"p-radioButton\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_31_listener($event) {\n        return ctx.inputStyle = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"label\", 18);\n      i0.ɵɵtext(33, \"Outlined\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 5)(35, \"p-radioButton\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_radioButton_ngModelChange_35_listener($event) {\n        return ctx.inputStyle = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"label\", 20);\n      i0.ɵɵtext(37, \"Filled\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(38, \"h5\");\n      i0.ɵɵtext(39, \"Ripple Effect\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"p-inputSwitch\", 21);\n      i0.ɵɵlistener(\"ngModelChange\", function AppConfigComponent_Template_p_inputSwitch_ngModelChange_40_listener($event) {\n        return ctx.ripple = $event;\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"visible\", ctx.visible)(\"transitionOptions\", \".3s cubic-bezier(0, 0, 0.2, 1)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.minimal);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.colorScheme);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.colorScheme);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.minimal);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.componentThemes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.scale === ctx.scales[0]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.scales);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.scale === ctx.scales[ctx.scales.length - 1]);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.inputStyle);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.inputStyle);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.ripple);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgStyle, i4.NgControlStatus, i4.NgModel, i5.Sidebar, i6.RadioButton, i7.ButtonDirective, i8.InputSwitch],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","AppConfigComponent","constructor","layoutService","menuService","ngOnInit","componentThemes","name","lightColor","darkColor","changeColorScheme","colorScheme","themeLink","document","getElementById","themeLinkHref","getAttribute","currentColorScheme","config","newColorScheme","newHref","replace","replaceThemeLink","onConfigUpdate","changeTheme","theme","href","onComplete","id","cloneLinkElement","cloneNode","setAttribute","parentNode","insertBefore","nextSibling","addEventListener","remove","isIE","test","window","navigator","userAgent","onConfigButtonClick","showConfigSidebar","currentTheme","_val","visible","state","configSidebarVisible","scale","menuTheme","layoutTheme","menuMode","isSlim","reset","inputStyle","ripple","decrementScale","applyScale","incrementScale","documentElement","style","fontSize","selectors","inputs","minimal","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\verona-ng-15.0.1\\src\\app\\layout\\config\\app.config.component.html","C:\\Users\\UsuarioPrincipal\\Downloads\\verona-ng-15.0.1\\src\\app\\layout\\config\\app.config.component.ts"],"sourcesContent":["<button class=\"layout-config-button p-link\" type=\"button\" (click)=\"onConfigButtonClick()\">\n    <i class=\"pi pi-cog\"></i>\n</button>\n\n<p-sidebar [(visible)]=\"visible\" position=\"right\" [transitionOptions]=\"'.3s cubic-bezier(0, 0, 0.2, 1)'\" styleClass=\"layout-config-sidebar w-18rem\">\n    <ng-container *ngIf=\"!minimal\">\n        <h5>Menu Type</h5>\n        <div class=\"flex\">\n            <div class=\"field-radiobutton flex-1\">\n                <p-radioButton name=\"menuMode\" value=\"static\" [(ngModel)]=\"menuMode\" inputId=\"mode1\"></p-radioButton>\n                <label for=\"mode1\">Static</label>\n            </div>\n            <div class=\"field-radiobutton flex-1\">\n                <p-radioButton name=\"menuMode\" value=\"slim\" [(ngModel)]=\"menuMode\" inputId=\"mode2\"></p-radioButton>\n                <label for=\"mode2\">Slim</label>\n            </div>\n        </div>\n        <hr class=\"surface-border\"/>\n    </ng-container>\n\n    <h5>Color Scheme</h5>\n    <div class=\"flex\">\n        <div class=\"field-radiobutton flex-1\">\n            <p-radioButton name=\"colorScheme\" value=\"light\" [(ngModel)]=\"colorScheme\" inputId=\"scheme1\"></p-radioButton>\n            <label for=\"scheme1\">Light</label>\n        </div>\n        <div class=\"field-radiobutton flex-1\">\n            <p-radioButton name=\"colorScheme\" value=\"dark\" [(ngModel)]=\"colorScheme\" inputId=\"scheme2\"></p-radioButton>\n            <label for=\"scheme2\">Dark</label>\n        </div>\n    </div>\n\n    <ng-container *ngIf=\"!minimal\">\n        <h5>Layout Theme</h5>\n        <div class=\"field-radiobutton\">\n            <p-radioButton name=\"menuTheme\" value=\"colorScheme\" [(ngModel)]=\"menuTheme\" inputId=\"menutheme-colorscheme\"></p-radioButton>\n            <label for=\"menutheme-colorscheme\">Color Scheme</label>\n        </div>\n        <div class=\"field-radiobutton\">\n            <p-radioButton name=\"menuTheme\" value=\"primaryColor\" [(ngModel)]=\"menuTheme\" inputId=\"menutheme-primarycolor\" [disabled]=\"colorScheme === 'dark'\"></p-radioButton>\n            <label for=\"menutheme-primarycolor\">Primary Color (Light Only)</label>\n        </div>\n    </ng-container>\n\n    <h5>Themes</h5>\n    <div class=\"flex flex-wrap gap-3\">\n        <div *ngFor=\"let theme of componentThemes\">\n            <a style=\"cursor: pointer\" (click)=\"changeTheme(theme.name)\" class=\"inline-flex justify-content-center align-items-center w-2rem h-2rem border-round\" \n                [ngStyle]=\"{'background-color': colorScheme === 'light' ? theme.lightColor : theme.darkColor, 'color': colorScheme === 'light' ? '#ffffff' : '#000000'}\">\n                <i class=\"pi pi-check\" *ngIf=\"currentTheme === theme.name\"></i>\n            </a>\n        </div>\n    </div>\n\n    <h5>Scale</h5>\n    <div class=\"flex align-items-center\">\n        <button icon=\"pi pi-minus\" type=\"button\" pButton (click)=\"decrementScale()\" class=\"p-button-text p-button-rounded w-2rem h-2rem mr-2\" [disabled]=\"scale === scales[0]\"></button>\n        <div class=\"flex gap-3 align-items-center\">\n            <i class=\"pi pi-circle-fill text-300\" *ngFor=\"let s of scales\" [ngClass]=\"{'text-primary-500': s === scale}\"></i>\n        </div>\n        <button icon=\"pi pi-plus\"  type=\"button\" pButton (click)=\"incrementScale()\" class=\"p-button-text p-button-rounded w-2rem h-2rem ml-2\" [disabled]=\"scale === scales[scales.length - 1]\"></button>\n    </div>\n\n    <h5>Input Style</h5>\n    <div class=\"flex\">\n        <div class=\"field-radiobutton flex-1\">\n            <p-radioButton name=\"inputStyle\" value=\"outlined\" [(ngModel)]=\"inputStyle\" inputId=\"inputStyle1\"></p-radioButton>\n            <label for=\"inputStyle1\">Outlined</label>\n        </div>\n        <div class=\"field-radiobutton flex-1\">\n            <p-radioButton name=\"inputStyle\" value=\"filled\" [(ngModel)]=\"inputStyle\" inputId=\"inputStyle2\"></p-radioButton>\n            <label for=\"inputStyle2\">Filled</label>\n        </div>\n    </div>\n\n    <h5>Ripple Effect</h5>\n    <p-inputSwitch [(ngModel)]=\"ripple\"></p-inputSwitch>\n</p-sidebar>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AppLayoutComponent} from '../app.layout.component';\nimport {LayoutService} from \"../service/app.layout.service\";\nimport {MenuService} from \"../app.menu.service\";\n\n@Component({\n    selector: 'app-config',\n    templateUrl: './app.config.component.html'\n})\nexport class AppConfigComponent implements OnInit {\n\n    @Input() minimal: boolean = false;\n\n    componentThemes: any[] = [];\n\n    scales: number[] = [12, 13, 14, 15, 16];\n\n    constructor(public layoutService: LayoutService, public menuService: MenuService) {}\n\n    ngOnInit() {\n        this.componentThemes = [\n            {name: 'indigo', lightColor: '#4C63B6', darkColor : '#6A7EC2'},\n            {name: 'blue', lightColor: '#1992D4', darkColor : '#3BABE8'},\n            {name: 'green', lightColor: '#27AB83', darkColor : '#44D4A9'},\n            {name: 'deeppurple', lightColor: '#896FF4', darkColor : '#B1A0F8'},\n            {name: 'orange', lightColor: '#DE911D', darkColor : '#E8AB4F'},\n            {name: 'cyan', lightColor: '#00B9C6', darkColor : '#58CDD5'},\n            {name: 'yellow', lightColor: '#F9C404', darkColor : '#FDDD68'},\n            {name: 'pink', lightColor: '#C74B95', darkColor : '#D77FB4'},\n            {name: 'purple', lightColor: '#BA6FF4', darkColor : '#D1A0F8'},\n            {name: 'lime', lightColor: '#84BD20', darkColor : '#A3D44E'},\n        ];\n    }\n\n    changeColorScheme(colorScheme: string) {\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-link');\n        const themeLinkHref = themeLink.getAttribute('href');\n        const currentColorScheme = 'theme-' + this.layoutService.config.colorScheme;\n        const newColorScheme = 'theme-' + colorScheme;\n        const newHref = themeLinkHref!.replace(currentColorScheme, newColorScheme);\n        this.replaceThemeLink(newHref, () => {\n            this.layoutService.config.colorScheme = colorScheme;\n            this.layoutService.onConfigUpdate();\n        });\n    }\n\n    changeTheme(theme: string) {\n        const themeLink = <HTMLLinkElement>document.getElementById('theme-link');\n        const newHref = themeLink.getAttribute('href')!.replace(this.layoutService.config.theme, theme);\n        this.replaceThemeLink(newHref, () => {\n            this.layoutService.config.theme = theme;\n            this.layoutService.onConfigUpdate();\n        });\n    }\n\n    replaceThemeLink(href: string, onComplete: Function) {\n        const id = 'theme-link';\n        const themeLink = <HTMLLinkElement>document.getElementById(id);\n        const cloneLinkElement = <HTMLLinkElement>themeLink.cloneNode(true);\n\n        cloneLinkElement.setAttribute('href', href);\n        cloneLinkElement.setAttribute('id', id + '-clone');\n\n        themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n        cloneLinkElement.addEventListener('load', () => {\n            themeLink.remove();\n            cloneLinkElement.setAttribute('id', id);\n            onComplete();\n        });\n    }\n\n    isIE() {\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent);\n    }\n\n    onConfigButtonClick() {\n        this.layoutService.showConfigSidebar();\n    }\n\n    get currentTheme(): string {\n        return this.layoutService.config.theme;\n    }\n\n    get colorScheme(): string {\n        return this.layoutService.config.colorScheme;\n    }\n\n    set colorScheme(_val: string) {\n        this.changeColorScheme(_val);\n    }\n\n    get visible(): boolean {\n        return this.layoutService.state.configSidebarVisible;\n    }\n\n    set visible(_val: boolean) {\n        this.layoutService.state.configSidebarVisible = _val;\n    }\n\n    get scale(): number {\n        return this.layoutService.config.scale;\n    }\n\n    set scale(_val: number) {\n        this.layoutService.config.scale = _val;\n    }\n    \n    get menuTheme(): string {\n        return this.layoutService.config.layoutTheme;\n    }\n\n    set menuTheme(_val: string) {\n        this.layoutService.config.layoutTheme = _val;\n    }\n\n    get menuMode(): string {\n        return this.layoutService.config.menuMode;\n    }\n\n    set menuMode(_val: string) {\n        this.layoutService.config.menuMode = _val;\n        if (this.layoutService.isSlim()) {\n            this.menuService.reset();\n        }\n    }\n\n    get inputStyle(): string {\n        return this.layoutService.config.inputStyle;\n    }\n\n    set inputStyle(_val: string) {\n        this.layoutService.config.inputStyle = _val;\n    }\n\n    get ripple(): boolean {\n        return this.layoutService.config.ripple;\n    }\n\n    set ripple(_val: boolean) {\n        this.layoutService.config.ripple = _val;\n    }\n\n    decrementScale(){\n        this.scale--;    \n        this.applyScale();\n    }    \n\n    incrementScale() {\n        this.scale++;\n        this.applyScale();\n    }\n\n    applyScale() {\n        document.documentElement.style.fontSize = this.scale + 'px';\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}