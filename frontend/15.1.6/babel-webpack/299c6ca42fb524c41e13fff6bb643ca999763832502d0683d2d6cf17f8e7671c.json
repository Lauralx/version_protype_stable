{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/layout/service/app.layout.service\";\nimport * as i2 from \"primeng/chart\";\nexport class ChartsDemoComponent {\n  constructor(layoutService) {\n    this.layoutService = layoutService;\n    this.subscription = this.layoutService.configUpdate$.subscribe(config => {\n      this.initCharts();\n    });\n  }\n  ngOnInit() {\n    this.initCharts();\n  }\n  initCharts() {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue('--text-color');\n    const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n    const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n    this.barData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: documentStyle.getPropertyValue('--primary-500'),\n        borderColor: documentStyle.getPropertyValue('--primary-500'),\n        data: [65, 59, 80, 81, 56, 55, 40]\n      }, {\n        label: 'My Second dataset',\n        backgroundColor: documentStyle.getPropertyValue('--primary-200'),\n        borderColor: documentStyle.getPropertyValue('--primary-200'),\n        data: [28, 48, 40, 19, 86, 27, 90]\n      }]\n    };\n    this.barOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: textColorSecondary,\n            font: {\n              weight: 500\n            }\n          },\n          grid: {\n            display: false,\n            drawBorder: false\n          }\n        },\n        y: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        }\n      }\n    };\n    this.pieData = {\n      labels: ['A', 'B', 'C'],\n      datasets: [{\n        data: [540, 325, 702],\n        backgroundColor: [documentStyle.getPropertyValue('--indigo-500'), documentStyle.getPropertyValue('--purple-500'), documentStyle.getPropertyValue('--teal-500')],\n        hoverBackgroundColor: [documentStyle.getPropertyValue('--indigo-400'), documentStyle.getPropertyValue('--purple-400'), documentStyle.getPropertyValue('--teal-400')]\n      }]\n    };\n    this.pieOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            usePointStyle: true,\n            color: textColor\n          }\n        }\n      }\n    };\n    this.lineData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'First Dataset',\n        data: [65, 59, 80, 81, 56, 55, 40],\n        fill: false,\n        backgroundColor: documentStyle.getPropertyValue('--primary-500'),\n        borderColor: documentStyle.getPropertyValue('--primary-500'),\n        tension: .4\n      }, {\n        label: 'Second Dataset',\n        data: [28, 48, 40, 19, 86, 27, 90],\n        fill: false,\n        backgroundColor: documentStyle.getPropertyValue('--primary-200'),\n        borderColor: documentStyle.getPropertyValue('--primary-200'),\n        tension: .4\n      }]\n    };\n    this.lineOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        },\n        y: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        }\n      }\n    };\n    this.polarData = {\n      datasets: [{\n        data: [11, 16, 7, 3],\n        backgroundColor: [documentStyle.getPropertyValue('--indigo-500'), documentStyle.getPropertyValue('--purple-500'), documentStyle.getPropertyValue('--teal-500'), documentStyle.getPropertyValue('--orange-500')],\n        label: 'My dataset'\n      }],\n      labels: ['Indigo', 'Purple', 'Teal', 'Orange']\n    };\n    this.polarOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor\n          }\n        }\n      },\n      scales: {\n        r: {\n          grid: {\n            color: surfaceBorder\n          }\n        }\n      }\n    };\n    this.radarData = {\n      labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n      datasets: [{\n        label: 'My First dataset',\n        borderColor: documentStyle.getPropertyValue('--indigo-400'),\n        pointBackgroundColor: documentStyle.getPropertyValue('--indigo-400'),\n        pointBorderColor: documentStyle.getPropertyValue('--indigo-400'),\n        pointHoverBackgroundColor: textColor,\n        pointHoverBorderColor: documentStyle.getPropertyValue('--indigo-400'),\n        data: [65, 59, 90, 81, 56, 55, 40]\n      }, {\n        label: 'My Second dataset',\n        borderColor: documentStyle.getPropertyValue('--purple-400'),\n        pointBackgroundColor: documentStyle.getPropertyValue('--purple-400'),\n        pointBorderColor: documentStyle.getPropertyValue('--purple-400'),\n        pointHoverBackgroundColor: textColor,\n        pointHoverBorderColor: documentStyle.getPropertyValue('--purple-400'),\n        data: [28, 48, 40, 19, 96, 27, 100]\n      }]\n    };\n    this.radarOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor\n          }\n        }\n      },\n      scales: {\n        r: {\n          pointLabels: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder\n          }\n        }\n      }\n    };\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\nChartsDemoComponent.ɵfac = function ChartsDemoComponent_Factory(t) {\n  return new (t || ChartsDemoComponent)(i0.ɵɵdirectiveInject(i1.LayoutService));\n};\nChartsDemoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChartsDemoComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 27,\n  vars: 12,\n  consts: [[1, \"grid\", \"p-fluid\"], [1, \"col-12\", \"lg:col-6\"], [1, \"card\"], [\"type\", \"line\", 3, \"data\", \"options\"], [1, \"card\", \"flex\", \"flex-column\", \"align-items-center\"], [1, \"text-left\", \"w-full\"], [\"type\", \"pie\", 3, \"data\", \"options\"], [\"type\", \"polarArea\", 3, \"data\", \"options\"], [\"type\", \"bar\", 3, \"data\", \"options\"], [\"type\", \"doughnut\", 3, \"data\", \"options\"], [\"type\", \"radar\", 3, \"data\", \"options\"]],\n  template: function ChartsDemoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n      i0.ɵɵtext(4, \"Linear Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"p-chart\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"h5\", 5);\n      i0.ɵɵtext(8, \"Pie Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"p-chart\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"h5\", 5);\n      i0.ɵɵtext(12, \"Polar Area Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"p-chart\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 1)(15, \"div\", 2)(16, \"h5\");\n      i0.ɵɵtext(17, \"Bar Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"p-chart\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"h5\", 5);\n      i0.ɵɵtext(21, \"Doughnut Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"p-chart\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"h5\", 5);\n      i0.ɵɵtext(25, \"Radar Chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"p-chart\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"data\", ctx.lineData)(\"options\", ctx.lineOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"data\", ctx.pieData)(\"options\", ctx.pieOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"data\", ctx.polarData)(\"options\", ctx.polarOptions);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"data\", ctx.barData)(\"options\", ctx.barOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"data\", ctx.pieData)(\"options\", ctx.pieOptions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"data\", ctx.radarData)(\"options\", ctx.radarOptions);\n    }\n  },\n  dependencies: [i2.UIChart],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["ChartsDemoComponent","constructor","layoutService","subscription","configUpdate$","subscribe","config","initCharts","ngOnInit","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","textColorSecondary","surfaceBorder","barData","labels","datasets","label","backgroundColor","borderColor","data","barOptions","plugins","legend","color","scales","x","ticks","font","weight","grid","display","drawBorder","y","pieData","hoverBackgroundColor","pieOptions","usePointStyle","lineData","fill","tension","lineOptions","polarData","polarOptions","r","radarData","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","radarOptions","pointLabels","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\uikit\\charts\\chartsdemo.component.ts","C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\uikit\\charts\\chartsdemo.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\n\n@Component({\n    templateUrl: './chartsdemo.component.html'\n})\nexport class ChartsDemoComponent implements OnInit, OnDestroy {\n\n    lineData: any;\n\n    barData: any;\n\n    pieData: any;\n\n    polarData: any;\n\n    radarData: any;\n\n    lineOptions: any;\n\n    barOptions: any;\n\n    pieOptions: any;\n\n    polarOptions: any;\n\n    radarOptions: any;\n\n    subscription: Subscription;\n\n    constructor(public layoutService: LayoutService) {\n        this.subscription = this.layoutService.configUpdate$.subscribe(config => {\n            this.initCharts();\n        });\n    }\n\n    ngOnInit() {\n        this.initCharts();\n    }\n\n    initCharts() {\n        const documentStyle = getComputedStyle(document.documentElement);\n        const textColor = documentStyle.getPropertyValue('--text-color');\n        const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n        const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n        \n        this.barData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    backgroundColor: documentStyle.getPropertyValue('--primary-500'),\n                    borderColor: documentStyle.getPropertyValue('--primary-500'),\n                    data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    backgroundColor: documentStyle.getPropertyValue('--primary-200'),\n                    borderColor: documentStyle.getPropertyValue('--primary-200'),\n                    data: [28, 48, 40, 19, 86, 27, 90]\n                }\n            ]\n        };\n\n        this.barOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: textColor\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: textColorSecondary,\n                        font: {\n                            weight: 500\n                        }\n                    },\n                    grid: {\n                        display: false,\n                        drawBorder: false\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                },\n            }\n        };\n\n        this.pieData = {\n            labels: ['A', 'B', 'C'],\n            datasets: [\n                {\n                    data: [540, 325, 702],\n                    backgroundColor: [\n                        documentStyle.getPropertyValue('--indigo-500'),\n                        documentStyle.getPropertyValue('--purple-500'),\n                        documentStyle.getPropertyValue('--teal-500')\n                    ],\n                    hoverBackgroundColor: [\n                        documentStyle.getPropertyValue('--indigo-400'),\n                        documentStyle.getPropertyValue('--purple-400'),\n                        documentStyle.getPropertyValue('--teal-400')\n                    ]\n                }]\n        };\n\n        this.pieOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        usePointStyle: true,\n                        color: textColor\n                    }\n                }\n            }\n        };\n\n        this.lineData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    fill: false,\n                    backgroundColor: documentStyle.getPropertyValue('--primary-500'),\n                    borderColor: documentStyle.getPropertyValue('--primary-500'),\n                    tension: .4\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    fill: false,\n                    backgroundColor: documentStyle.getPropertyValue('--primary-200'),\n                    borderColor: documentStyle.getPropertyValue('--primary-200'),\n                    tension: .4\n                }\n            ]\n        };\n\n        this.lineOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: textColor\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                },\n            }\n        };\n\n        this.polarData = {\n            datasets: [{\n                data: [\n                    11,\n                    16,\n                    7,\n                    3\n                ],\n                backgroundColor: [\n                    documentStyle.getPropertyValue('--indigo-500'),\n                    documentStyle.getPropertyValue('--purple-500'),\n                    documentStyle.getPropertyValue('--teal-500'),\n                    documentStyle.getPropertyValue('--orange-500')\n                ],\n                label: 'My dataset'\n            }],\n            labels: [\n                'Indigo',\n                'Purple',\n                'Teal',\n                'Orange'\n            ]\n        };\n\n        this.polarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: textColor\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    grid: {\n                        color: surfaceBorder\n                    }\n                }\n            }\n        };\n\n        this.radarData = {\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n            datasets: [\n                {\n                    label: 'My First dataset',\n                    borderColor: documentStyle.getPropertyValue('--indigo-400'),\n                    pointBackgroundColor: documentStyle.getPropertyValue('--indigo-400'),\n                    pointBorderColor: documentStyle.getPropertyValue('--indigo-400'),\n                    pointHoverBackgroundColor: textColor,\n                    pointHoverBorderColor: documentStyle.getPropertyValue('--indigo-400'),\n                    data: [65, 59, 90, 81, 56, 55, 40]\n                },\n                {\n                    label: 'My Second dataset',\n                    borderColor: documentStyle.getPropertyValue('--purple-400'),\n                    pointBackgroundColor: documentStyle.getPropertyValue('--purple-400'),\n                    pointBorderColor: documentStyle.getPropertyValue('--purple-400'),\n                    pointHoverBackgroundColor: textColor,\n                    pointHoverBorderColor: documentStyle.getPropertyValue('--purple-400'),\n                    data: [28, 48, 40, 19, 96, 27, 100]\n                }\n            ]\n        };\n\n        this.radarOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: textColor\n                    }\n                }\n            },\n            scales: {\n                r: {\n                    pointLabels:{\n                        color: textColorSecondary,\n                    },\n                    grid: {\n                        color: surfaceBorder\n                    }\n                }\n            }\n        };\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    \n}\n","<div class=\"grid p-fluid\">\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Linear Chart</h5>\n            <p-chart type=\"line\" [data]=\"lineData\" [options]=\"lineOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Pie Chart</h5>\n            <p-chart type=\"pie\" [data]=\"pieData\" [options]=\"pieOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Polar Area Chart</h5>\n            <p-chart type=\"polarArea\" [data]=\"polarData\" [options]=\"polarOptions\"></p-chart>\n        </div>\n    </div>\n    <div class=\"col-12 lg:col-6\">\n        <div class=\"card\">\n            <h5>Bar Chart</h5>\n            <p-chart type=\"bar\" [data]=\"barData\" [options]=\"barOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Doughnut Chart</h5>\n            <p-chart type=\"doughnut\" [data]=\"pieData\" [options]=\"pieOptions\"></p-chart>\n        </div>\n\n        <div class=\"card flex flex-column align-items-center\">\n            <h5 class=\"text-left w-full\">Radar Chart</h5>\n            <p-chart type=\"radar\" [data]=\"radarData\" [options]=\"radarOptions\"></p-chart>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}