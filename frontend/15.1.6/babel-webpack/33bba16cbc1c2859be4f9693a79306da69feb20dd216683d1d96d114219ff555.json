{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FileAppService {\n  constructor(http) {\n    this.http = http;\n  }\n  getFiles() {\n    return this.http.get('assets/demo/data/file-management.json').toPromise().then(res => res.files).then(data => data);\n  }\n  getMetrics() {\n    return this.http.get('assets/demo/data/file-management.json').toPromise().then(res => res.metrics).then(data => data);\n  }\n  getFoldersSmall() {\n    return this.http.get('assets/demo/data/file-management.json').toPromise().then(res => res.folders_small).then(data => data);\n  }\n  getFoldersLarge() {\n    return this.http.get('assets/demo/data/file-management.json').toPromise().then(res => res.folders_large).then(data => data);\n  }\n}\nFileAppService.ɵfac = function FileAppService_Factory(t) {\n  return new (t || FileAppService)(i0.ɵɵinject(i1.HttpClient));\n};\nFileAppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FileAppService,\n  factory: FileAppService.ɵfac\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQ;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAe,CAAC,CAChCF,IAAI,CAACG,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAC,UAAU;IACN,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACI,OAAmB,CAAC,CACpCL,IAAI,CAACG,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAG,eAAe;IACX,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACM,aAAyB,CAAC,CAC1CP,IAAI,CAACG,IAAI,IAAIA,IAAI,CAAC;EAC3B;EAEAK,eAAe;IACX,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAM,uCAAuC,CAAC,CAC7DC,SAAS,EAAE,CACXC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACQ,aAAyB,CAAC,CAC1CT,IAAI,CAACG,IAAI,IAAIA,IAAI,CAAC;EAC3B;;;mBA9BST,cAAc;AAAA;;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;AAAA","names":["FileAppService","constructor","http","getFiles","get","toPromise","then","res","files","data","getMetrics","metrics","getFoldersSmall","folders_small","getFoldersLarge","folders_large","factory"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\file\\service\\file.app.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { File } from 'src/app/demo/api/file';\nimport { Metric } from 'src/app/demo/api/metric';\nimport { Folder } from 'src/app/demo/api/folder';\n\n@Injectable()\nexport class FileAppService {\n\n    constructor(private http: HttpClient) { }\n\n    getFiles() {\n        return this.http.get<any>('assets/demo/data/file-management.json')\n            .toPromise()\n            .then(res => res.files as File[])\n            .then(data => data);\n    }\n\n    getMetrics() {\n        return this.http.get<any>('assets/demo/data/file-management.json')\n            .toPromise()\n            .then(res => res.metrics as Metric[])\n            .then(data => data);\n    }\n\n    getFoldersSmall() {\n        return this.http.get<any>('assets/demo/data/file-management.json')\n            .toPromise()\n            .then(res => res.folders_small as Folder[])\n            .then(data => data);\n    }\n\n    getFoldersLarge() {\n        return this.http.get<any>('assets/demo/data/file-management.json')\n            .toPromise()\n            .then(res => res.folders_large as Folder[])\n            .then(data => data);\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}