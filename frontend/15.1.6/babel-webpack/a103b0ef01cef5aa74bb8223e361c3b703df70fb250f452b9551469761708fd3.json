{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"../service/mail.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"primeng/tooltip\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/ripple\";\nimport * as i8 from \"primeng/inputtext\";\nimport * as i9 from \"primeng/editor\";\nfunction MailReplyComponent_div_0_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 20);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.content.message, i0.ɵɵsanitizeHtml);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"height\": \"250px\"\n  };\n};\nfunction MailReplyComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"label\", 4);\n    i0.ɵɵtext(4, \"To\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 5);\n    i0.ɵɵelement(6, \"i\", 6);\n    i0.ɵɵelementStart(7, \"input\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function MailReplyComponent_div_0_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.content.from = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 8);\n    i0.ɵɵtext(10, \"Subject\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\", 5);\n    i0.ɵɵelement(12, \"i\", 9);\n    i0.ɵɵelementStart(13, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function MailReplyComponent_div_0_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.content.title = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(14, MailReplyComponent_div_0_div_14_Template, 1, 1, \"div\", 11);\n    i0.ɵɵelementStart(15, \"div\", 12)(16, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function MailReplyComponent_div_0_Template_span_click_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.toggleMessage());\n    });\n    i0.ɵɵelement(17, \"i\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"p-editor\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function MailReplyComponent_div_0_Template_p_editor_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newMail.message = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 16);\n    i0.ɵɵelement(20, \"button\", 17)(21, \"button\", 18);\n    i0.ɵɵelementStart(22, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function MailReplyComponent_div_0_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.sendMail());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.content.from);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.content.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.displayMessage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"pTooltip\", ctx_r0.displayMessage ? \"Hide content\" : \"Show content\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c0));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newMail.message);\n  }\n}\nexport class MailReplyComponent {\n  constructor(messageService, mailService) {\n    this.messageService = messageService;\n    this.mailService = mailService;\n    this.newMail = {\n      id: '',\n      to: '',\n      email: '',\n      image: '',\n      title: '',\n      message: '',\n      date: '',\n      important: false,\n      starred: false,\n      trash: false,\n      spam: false,\n      archived: false,\n      sent: true\n    };\n    this.displayMessage = false;\n    this.content = {};\n    this.hide = new EventEmitter();\n  }\n  sendMail() {\n    let {\n      image,\n      from,\n      title\n    } = this.content;\n    this.newMail = Object.assign(Object.assign({}, this.newMail), {\n      to: from,\n      title: title,\n      image: image\n    });\n    this.mailService.onSend(this.newMail);\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Success',\n      detail: 'Mail sent'\n    });\n    this.hide.emit();\n  }\n  toggleMessage() {\n    this.displayMessage = !this.displayMessage;\n  }\n}\nMailReplyComponent.ɵfac = function MailReplyComponent_Factory(t) {\n  return new (t || MailReplyComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.MailService));\n};\nMailReplyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MailReplyComponent,\n  selectors: [[\"app-mail-reply\"]],\n  inputs: {\n    content: \"content\"\n  },\n  outputs: {\n    hide: \"hide\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"p-0 m-0\", 4, \"ngIf\"], [1, \"p-0\", \"m-0\"], [1, \"surface-section\", \"grid\", \"grid-nogutter\", \"formgrid\", \"flex-column\", \"md:flex-row\", \"gap-6\", \"p-5\", \"border-round\"], [1, \"col\"], [\"for\", \"to\", 1, \"block\", \"text-900\", \"font-semibold\", \"mb-3\"], [1, \"p-input-icon-left\", \"w-full\", 2, \"height\", \"3.5rem\"], [1, \"pi\", \"pi-user\", 2, \"left\", \"1.5rem\"], [\"id\", \"to\", \"type\", \"text\", \"pInputText\", \"\", 1, \"w-full\", \"pl-7\", \"text-900\", \"font-semibold\", 2, \"height\", \"3.5rem\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"Subject\", 1, \"block\", \"text-900\", \"font-semibold\", \"mb-3\"], [1, \"pi\", \"pi-pencil\", 2, \"left\", \"1.5rem\"], [\"id\", \"subject\", \"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"Subject\", 1, \"w-full\", \"pl-7\", \"text-900\", \"font-semibold\", 2, \"height\", \"3.5rem\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"border-1 surface-border border-round p-4\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"col-12\", \"field\"], [1, \"surface-ground\", \"cursor-pointer\", \"border-round\", \"px-2\", 3, \"pTooltip\", \"click\"], [1, \"pi\", \"pi-ellipsis-h\"], [\"styleClass\", \"mt-3\", 3, \"ngModel\", \"ngModelChange\"], [1, \"flex\", \"column-gap-3\", \"justify-content-end\", \"p-5\", \"border-top-1\", \"surface-border\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-image\", 1, \"p-button-outlined\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-paperclip\", 1, \"p-button-outlined\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-send\", \"label\", \"Send\", 1, \"p-button-primary\", \"h-3rem\", 3, \"click\"], [1, \"border-1\", \"surface-border\", \"border-round\", \"p-4\", 3, \"innerHTML\"]],\n  template: function MailReplyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MailReplyComponent_div_0_Template, 23, 8, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.content);\n    }\n  },\n  dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.Tooltip, i6.ButtonDirective, i7.Ripple, i8.InputText, i9.Editor],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAA2BA,YAAY,QAAgB,eAAe;;;;;;;;;;;;;ICgB9DC,0BAAiH;;;;IAApCA,qEAA6B;;;;;;;;;;;IAhBlHA,8BAAqC;IAGiCA,kBAAE;IAAAA,iBAAQ;IACpEA,+BAA+D;IAC3DA,uBAAgD;IAChDA,gCAAoI;IAA5BA;MAAAA;MAAA;MAAA,OAAaA,4CACjI;IAAA,EAD8I;IAAlIA,iBAAoI;IAG5IA,8BAAiB;IACkDA,wBAAO;IAAAA,iBAAQ;IAC9EA,gCAA+D;IAC3DA,wBAAkD;IAClDA,kCAAiK;IAA9BA;MAAAA;MAAA;MAAA,OAAaA,6CAC7J;IAAA,EAD2K;IAA9JA,iBAAiK;IAGzKA,4EAAiH;IACjHA,gCAA0B;IACwCA;MAAAA;MAAA;MAAA,OAASA,qCAAe;IAAA,EAAC;IAA+DA,yBAAgC;IAAAA,iBAAO;IAC7LA,qCAAuF;IAA9BA;MAAAA;MAAA;MAAA,OAAaA,+CAAuB;IAAA,EAAP;IAACA,iBAAW;IAG1GA,gCAAmF;IAC/EA,8BAA4F;IAE5FA,mCAA0H;IAArBA;MAAAA;MAAA;MAAA,OAASA,gCAAU;IAAA,EAAC;IAACA,iBAAS;;;;IAnBnBA,eAA0B;IAA1BA,6CAA0B;IAOCA,eAA2B;IAA3BA,8CAA2B;IAGhKA,eAAoB;IAApBA,4CAAoB;IAEkEA,eAA6D;IAA7DA,kFAA6D;IAC3IA,eAA4B;IAA5BA,yCAA4B;IAAmBA,gDAA6B;;;ADVlG,OAAM,MAAOC,kBAAkB;EAwB3BC,YAAoBC,cAA8B,EAAUC,WAAwB;IAAhE,mBAAc,GAAdD,cAAc;IAA0B,gBAAW,GAAXC,WAAW;IAtBvE,YAAO,GAAS;MACZC,EAAE,EAAE,EAAE;MACNC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE,KAAK;MACXC,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE;KACT;IAED,mBAAc,GAAY,KAAK;IAEtB,YAAO,GAAS,EAAE;IAEjB,SAAI,GAAsB,IAAIlB,YAAY,EAAE;EAEkC;EAExFmB,QAAQ;IACJ,IAAI;MAAEV,KAAK;MAAEW,IAAI;MAAEV;IAAK,CAAE,GAAG,IAAI,CAACW,OAAO;IACzC,IAAI,CAACC,OAAO,mCAAQ,IAAI,CAACA,OAAO;MAAEf,EAAE,EAAEa,IAAI;MAAEV,KAAK,EAAEA,KAAK;MAAED,KAAK,EAAEA;IAAK,EAAE;IACxE,IAAI,CAACJ,WAAW,CAACkB,MAAM,CAAC,IAAI,CAACD,OAAO,CAAC;IACrC,IAAI,CAAClB,cAAc,CAACoB,GAAG,CAAC;MAAEC,QAAQ,EAAE,SAAS;MAAEC,OAAO,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAW,CAAE,CAAC;IACzF,IAAI,CAACC,IAAI,CAACC,IAAI,EAAE;EACpB;EAEAC,aAAa;IACT,IAAI,CAACC,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;EAC9C;;;mBApCS7B,kBAAkB;AAAA;;QAAlBA,kBAAkB;EAAA8B;EAAAC;IAAAZ;EAAA;EAAAa;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCT/BrC,oEA2BM;;;MA3BAA,kCAAa","names":["EventEmitter","i0","MailReplyComponent","constructor","messageService","mailService","id","to","email","image","title","message","date","important","starred","trash","spam","archived","sent","sendMail","from","content","newMail","onSend","add","severity","summary","detail","hide","emit","toggleMessage","displayMessage","selectors","inputs","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\mail\\mail-reply\\mail-reply.component.ts","C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\mail\\mail-reply\\mail-reply.component.html"],"sourcesContent":["import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { Mail } from 'src/app/demo/api/mail';\nimport { MailService } from '../service/mail.service';\n\n@Component({\n    selector: 'app-mail-reply',\n    templateUrl: './mail-reply.component.html',\n})\nexport class MailReplyComponent {\n\n    newMail: Mail = {\n        id: '',\n        to: '',\n        email: '',\n        image: '',\n        title: '',\n        message: '',\n        date: '',\n        important: false,\n        starred: false,\n        trash: false,\n        spam: false,\n        archived: false,\n        sent: true\n    }\n\n    displayMessage: boolean = false;\n\n    @Input() content: Mail = {};\n\n    @Output() hide: EventEmitter<any> = new EventEmitter();\n\n    constructor(private messageService: MessageService, private mailService: MailService) { }\n\n    sendMail() {\n        let { image, from, title } = this.content\n        this.newMail = { ...this.newMail, to: from, title: title, image: image };\n        this.mailService.onSend(this.newMail);\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Mail sent' });\n        this.hide.emit();\n    }\n\n    toggleMessage() {\n        this.displayMessage = !this.displayMessage;\n    }\n}\n","<div *ngIf=\"content\" class=\"p-0 m-0\">\n    <div class=\"surface-section grid grid-nogutter formgrid flex-column md:flex-row gap-6 p-5 border-round\">\n        <div class=\"col\">\n            <label for=\"to\" class=\"block text-900 font-semibold mb-3\">To</label>\n            <span class=\"p-input-icon-left w-full\" style=\"height: 3.5rem;\">\n                <i class=\"pi pi-user\" style=\"left: 1.5rem;\"></i>\n                <input id=\"to\" type=\"text\" pInputText class=\"w-full pl-7 text-900 font-semibold\" style=\"height: 3.5rem\" [(ngModel)]=\"content.from\"/>\n            </span>\n        </div>\n        <div class=\"col\">\n            <label for=\"Subject\" class=\"block text-900 font-semibold mb-3\">Subject</label>\n            <span class=\"p-input-icon-left w-full\" style=\"height: 3.5rem;\">\n                <i class=\"pi pi-pencil\" style=\"left: 1.5rem;\"></i>\n                <input id=\"subject\" type=\"text\" pInputText placeholder=\"Subject\" class=\"w-full pl-7 text-900 font-semibold\" style=\"height: 3.5rem\" [(ngModel)]=\"content.title\" />\n            </span>\n        </div>\n        <div *ngIf=\"displayMessage\" class=\"border-1 surface-border border-round p-4\" [innerHTML]=\"content.message\"></div>\n        <div class=\"col-12 field\">\n            <span class=\"surface-ground cursor-pointer border-round px-2\" (click)=\"toggleMessage()\" [pTooltip]=\"displayMessage ? 'Hide content' : 'Show content'\"><i class=\"pi pi-ellipsis-h\"></i></span>\n            <p-editor [style]=\"{'height':'250px'}\" styleClass=\"mt-3\" [(ngModel)]=\"newMail.message\"></p-editor>\n        </div>\n    </div>\n    <div class=\"flex column-gap-3 justify-content-end p-5 border-top-1 surface-border\">\n        <button pButton pRipple type=\"button\" class=\"p-button-outlined\" icon=\"pi pi-image\"></button>\n        <button pButton pRipple type=\"button\" class=\"p-button-outlined\" icon=\"pi pi-paperclip\"></button>\n        <button pButton pRipple type=\"button\" class=\"p-button-primary h-3rem\" icon=\"pi pi-send\" label=\"Send\" (click)=\"sendMail()\"></button>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}