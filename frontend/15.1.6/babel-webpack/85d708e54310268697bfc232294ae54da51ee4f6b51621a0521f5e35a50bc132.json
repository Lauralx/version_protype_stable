{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/kanban.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"primeng/button\";\nimport * as i4 from \"primeng/ripple\";\nimport * as i5 from \"primeng/progressbar\";\nimport * as i6 from \"primeng/avatar\";\nimport * as i7 from \"primeng/avatargroup\";\nimport * as i8 from \"primeng/tieredmenu\";\nfunction KanbanCardComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.card.description);\n  }\n}\nconst _c0 = function () {\n  return {\n    \"height\": \".5rem\"\n  };\n};\nfunction KanbanCardComponent_p_progressBar_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-progressBar\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction0(4, _c0));\n    i0.ɵɵproperty(\"value\", ctx_r2.card.progress)(\"showValue\", false);\n  }\n}\nfunction KanbanCardComponent_p_avatar_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-avatar\", 14);\n  }\n  if (rf & 2) {\n    const assignee_r6 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"image\", \"assets/demo/images/avatar/\", assignee_r6.image, \"\");\n  }\n}\nfunction KanbanCardComponent_p_avatar_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-avatar\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate1(\"label\", \"+ \", ctx_r4.card.assignees.length - 3, \"\");\n  }\n}\nfunction KanbanCardComponent_div_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵelement(1, \"i\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7.generateTaskInfo());\n  }\n}\nfunction KanbanCardComponent_div_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵelement(1, \"i\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.card.attachments);\n  }\n}\nfunction KanbanCardComponent_div_15_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵelement(1, \"i\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r9.parseDate(ctx_r9.card.dueDate));\n  }\n}\nfunction KanbanCardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, KanbanCardComponent_div_15_span_1_Template, 3, 1, \"span\", 17);\n    i0.ɵɵtemplate(2, KanbanCardComponent_div_15_span_2_Template, 3, 1, \"span\", 17);\n    i0.ɵɵtemplate(3, KanbanCardComponent_div_15_span_3_Template, 3, 1, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.card.taskList.tasks.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.card.attachments);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.card.dueDate);\n  }\n}\nexport class KanbanCardComponent {\n  constructor(kanbanService) {\n    this.kanbanService = kanbanService;\n    this.menuItems = [];\n    this.subscription = this.kanbanService.lists$.subscribe(data => {\n      let subMenu = data.map(d => ({\n        id: d.listId,\n        label: d.title,\n        command: () => this.onMove(d.listId)\n      }));\n      this.generateMenu(subMenu);\n    });\n  }\n  parseDate(dueDate) {\n    return new Date(dueDate).toDateString().split(' ').slice(1, 3).join(' ');\n  }\n  onDelete() {\n    this.kanbanService.deleteCard(this.card.id, this.listId);\n  }\n  onCopy() {\n    this.kanbanService.copyCard(this.card, this.listId);\n  }\n  onMove(listId) {\n    this.kanbanService.moveCard(this.card, listId, this.listId);\n  }\n  generateMenu(subMenu) {\n    this.menuItems = [{\n      label: 'Copy card',\n      command: () => this.onCopy()\n    }, {\n      label: 'Move card',\n      items: subMenu\n    }, {\n      label: 'Delete card',\n      command: () => this.onDelete()\n    }];\n  }\n  generateTaskInfo() {\n    let total = this.card.taskList.tasks.length;\n    let completed = this.card.taskList.tasks.filter(t => t.completed).length;\n    return `${completed} / ${total}`;\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\nKanbanCardComponent.ɵfac = function KanbanCardComponent_Factory(t) {\n  return new (t || KanbanCardComponent)(i0.ɵɵdirectiveInject(i1.KanbanService));\n};\nKanbanCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: KanbanCardComponent,\n  selectors: [[\"app-kanban-card\"]],\n  inputs: {\n    card: \"card\",\n    listId: \"listId\"\n  },\n  decls: 16,\n  vars: 13,\n  consts: [[1, \"flex\", \"surface-card\", \"flex-column\", \"w-full\", \"border-1\", \"surface-border\", \"p-3\", \"gap-5\", \"hover:surface-ground\", \"cursor-pointer\", \"border-round\", 3, \"id\"], [1, \"flex\", \"justify-content-between\", \"align-items-center\"], [1, \"text-900\", \"font-semibold\"], [\"pButton\", \"\", \"pRipple\", \"\", \"type\", \"button\", \"icon\", \"pi pi-ellipsis-v\", 1, \"p-button-rounded\", \"p-button-text\", \"p-button-secondary\", \"p-trigger\", 3, \"click\"], [\"appendTo\", \"body\", 3, \"model\", \"popup\"], [\"menu\", \"\"], [\"style\", \"word-break: break-word\", \"class\", \"text-700\", 4, \"ngIf\"], [3, \"value\", \"showValue\", \"style\", 4, \"ngIf\"], [1, \"flex\", \"align-items-center\", \"justify-content-between\", \"flex-column\", \"md:flex-row\", \"gap-4\", \"md:gap-0\"], [\"shape\", \"circle\", \"styleClass\", \"border-2 surface-border\", 3, \"image\", 4, \"ngFor\", \"ngForOf\"], [\"shape\", \"circle\", \"styleClass\", \"border-2 surface-border mb-1 surface-ground\", 3, \"label\", 4, \"ngIf\"], [\"class\", \"flex align-items-center gap-3\", 4, \"ngIf\"], [1, \"text-700\", 2, \"word-break\", \"break-word\"], [3, \"value\", \"showValue\"], [\"shape\", \"circle\", \"styleClass\", \"border-2 surface-border\", 3, \"image\"], [\"shape\", \"circle\", \"styleClass\", \"border-2 surface-border mb-1 surface-ground\", 3, \"label\"], [1, \"flex\", \"align-items-center\", \"gap-3\"], [\"class\", \"text-900 font-semibold\", 4, \"ngIf\"], [1, \"pi\", \"pi-check-square\", \"text-700\", \"mr-2\"], [1, \"pi\", \"pi-paperclip\", \"text-700\", \"mr-2\"], [1, \"pi\", \"pi-clock\", \"text-700\", \"mr-2\"]],\n  template: function KanbanCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r10 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function KanbanCardComponent_Template_button_click_5_listener($event) {\n        i0.ɵɵrestoreView(_r10);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(_r0.toggle($event));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"p-tieredMenu\", 4, 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, KanbanCardComponent_div_8_Template, 2, 1, \"div\", 6);\n      i0.ɵɵtemplate(9, KanbanCardComponent_p_progressBar_9_Template, 1, 5, \"p-progressBar\", 7);\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"p-avatarGroup\");\n      i0.ɵɵtemplate(12, KanbanCardComponent_p_avatar_12_Template, 1, 1, \"p-avatar\", 9);\n      i0.ɵɵpipe(13, \"slice\");\n      i0.ɵɵtemplate(14, KanbanCardComponent_p_avatar_14_Template, 1, 1, \"p-avatar\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, KanbanCardComponent_div_15_Template, 4, 3, \"div\", 11);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.card.id);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.card.title ? ctx.card.title : \"Untitled\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"model\", ctx.menuItems)(\"popup\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.card.description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.card.taskList.tasks.length);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(13, 9, ctx.card.assignees, 0, 3));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.card.assignees && ctx.card.assignees.length > 3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.card.attachments || ctx.card.dueDate);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ButtonDirective, i4.Ripple, i5.ProgressBar, i6.Avatar, i7.AvatarGroup, i8.TieredMenu, i2.SlicePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","KanbanCardComponent","constructor","kanbanService","subscription","lists$","subscribe","data","subMenu","map","d","id","listId","label","title","command","onMove","generateMenu","parseDate","dueDate","Date","toDateString","split","slice","join","onDelete","deleteCard","card","onCopy","copyCard","moveCard","menuItems","items","generateTaskInfo","total","taskList","tasks","length","completed","filter","t","ngOnDestroy","unsubscribe","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\kanban\\kanban-card\\kanban-card.component.html","C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\apps\\kanban\\kanban-card\\kanban-card.component.ts"],"sourcesContent":["<div [id]=\"card.id\" class=\"flex surface-card flex-column w-full border-1 surface-border p-3 gap-5 hover:surface-ground cursor-pointer border-round\">\n    <div class=\"flex justify-content-between align-items-center\">\n        <span class=\"text-900 font-semibold\">{{card.title ? card.title : 'Untitled'}}</span>\n        <div>\n            <button pButton pRipple type=\"button\" icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-text p-button-secondary p-trigger\" (click)=\"menu.toggle($event)\"></button>\n            <p-tieredMenu #menu [model]=\"menuItems\" appendTo=\"body\" [popup]=\"true\"></p-tieredMenu>\n        </div>\n    </div>\n    <div *ngIf=\"card.description\" style=\"word-break: break-word\" class=\"text-700\">{{card.description}}</div>\n    <p-progressBar *ngIf=\"card.taskList.tasks.length\" [value]=\"card.progress\" [showValue]=\"false\" [style]=\"{'height':'.5rem'}\"></p-progressBar>\n    \n    <div class=\"flex align-items-center justify-content-between flex-column md:flex-row gap-4 md:gap-0\">\n        <p-avatarGroup>\n            <p-avatar *ngFor=\"let assignee of card.assignees | slice:0:3\" image=\"assets/demo/images/avatar/{{assignee.image}}\" shape=\"circle\" styleClass=\"border-2 surface-border\"></p-avatar>\n            <p-avatar *ngIf=\"card.assignees && card.assignees.length > 3\" label=\"+ {{card.assignees.length - 3}}\" shape=\"circle\" styleClass=\"border-2 surface-border mb-1 surface-ground\"></p-avatar>\n        </p-avatarGroup>\n        <div *ngIf=\"card.attachments || card.dueDate\" class=\"flex align-items-center gap-3\">\n            <span class=\"text-900 font-semibold\" *ngIf=\"card.taskList.tasks.length\"><i class=\"pi pi-check-square text-700 mr-2\"></i>{{generateTaskInfo()}}</span>\n            <span class=\"text-900 font-semibold\" *ngIf=\"card.attachments\"><i class=\"pi pi-paperclip text-700 mr-2\"></i>{{card.attachments}}</span>\n            <span class=\"text-900 font-semibold\" *ngIf=\"card.dueDate\"><i class=\"pi pi-clock text-700 mr-2\"></i>{{parseDate(card.dueDate)}}</span>\n        </div>\n    </div>\n</div>","import { Component, Input, OnDestroy } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { KanbanCard } from 'src/app/demo/api/kanban';\nimport { KanbanService } from '../service/kanban.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-kanban-card',\n    templateUrl: './kanban-card.component.html'\n})\nexport class KanbanCardComponent implements OnDestroy {\n\n    @Input() card!: KanbanCard;\n\n    @Input() listId!: string;\n\n    menuItems: MenuItem[] = [];\n\n    subscription: Subscription;\n\n    constructor(private kanbanService: KanbanService) {\n        this.subscription = this.kanbanService.lists$.subscribe(data => {\n            let subMenu = data.map(d => ({ id: d.listId, label: d.title, command: () => this.onMove(d.listId) }));\n            this.generateMenu(subMenu);\n        })\n    }\n\n    parseDate(dueDate: string) {\n        return new Date(dueDate).toDateString().split(' ').slice(1, 3).join(' ');\n    }\n\n    onDelete() {\n        this.kanbanService.deleteCard(this.card.id, this.listId);\n    }\n\n    onCopy() {\n        this.kanbanService.copyCard(this.card, this.listId);\n    }\n\n    onMove(listId: string) {\n        this.kanbanService.moveCard(this.card, listId, this.listId);\n    }\n\n    generateMenu(subMenu: any[]) {\n        this.menuItems = [\n            { label: 'Copy card', command: () => this.onCopy() },\n            { label: 'Move card', items: subMenu },\n            { label: 'Delete card', command: () => this.onDelete() }\n        ];\n    }\n\n    generateTaskInfo() {\n        let total = this.card.taskList.tasks.length;\n        let completed = this.card.taskList.tasks.filter(t => t.completed).length;\n        return `${completed} / ${total}`;\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}