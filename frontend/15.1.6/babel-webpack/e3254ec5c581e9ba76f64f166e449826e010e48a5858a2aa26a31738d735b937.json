{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LayoutService {\n  constructor() {\n    this.config = {\n      ripple: false,\n      inputStyle: 'outlined',\n      menuMode: 'slim',\n      colorScheme: 'light',\n      theme: 'indigo',\n      layoutTheme: 'colorScheme',\n      scale: 14\n    };\n    this.state = {\n      staticMenuDesktopInactive: false,\n      overlayMenuActive: false,\n      profileSidebarVisible: false,\n      configSidebarVisible: false,\n      staticMenuMobileActive: false,\n      menuHoverActive: false\n    };\n    this.tabs = [];\n    this.configUpdate = new Subject();\n    this.overlayOpen = new Subject();\n    this.tabOpen = new Subject();\n    this.tabClose = new Subject();\n    this.configUpdate$ = this.configUpdate.asObservable();\n    this.overlayOpen$ = this.overlayOpen.asObservable();\n    this.tabOpen$ = this.tabOpen.asObservable();\n    this.tabClose$ = this.tabClose.asObservable();\n  }\n  onMenuToggle() {\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive = !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n  onOverlaySubmenuOpen() {\n    this.overlayOpen.next(null);\n  }\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = true;\n  }\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n  isSlim() {\n    return this.config.menuMode === 'slim';\n  }\n  isMobile() {\n    return !this.isDesktop();\n  }\n  onConfigUpdate() {\n    this.configUpdate.next(this.config);\n  }\n  onTabOpen(value) {\n    this.tabOpen.next(value);\n  }\n  openTab(value) {\n    this.tabs = [...this.tabs, value];\n  }\n  onTabClose(value, index) {\n    this.tabClose.next({\n      tab: value,\n      index: index\n    });\n  }\n  closeTab(index) {\n    this.tabs.splice(index, 1);\n    this.tabs = [...this.tabs];\n  }\n}\nLayoutService.ɵfac = function LayoutService_Factory(t) {\n  return new (t || LayoutService)();\n};\nLayoutService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LayoutService,\n  factory: LayoutService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,MAAM;;AAyB9B,OAAM,MAAOC,aAAa;EAH1BC;IAKI,WAAM,GAAc;MAChBC,MAAM,EAAE,KAAK;MACbC,UAAU,EAAE,UAAU;MACtBC,QAAQ,EAAE,MAAM;MAChBC,WAAW,EAAE,OAAO;MACpBC,KAAK,EAAE,QAAQ;MACfC,WAAW,EAAE,aAAa;MAC1BC,KAAK,EAAE;KACV;IAED,UAAK,GAAgB;MACjBC,yBAAyB,EAAE,KAAK;MAChCC,iBAAiB,EAAE,KAAK;MACxBC,qBAAqB,EAAE,KAAK;MAC5BC,oBAAoB,EAAE,KAAK;MAC3BC,sBAAsB,EAAE,KAAK;MAC7BC,eAAe,EAAE;KACpB;IAED,SAAI,GAAe,EAAE;IAEb,iBAAY,GAAG,IAAIf,OAAO,EAAa;IAEvC,gBAAW,GAAG,IAAIA,OAAO,EAAO;IAEhC,YAAO,GAAG,IAAIA,OAAO,EAAY;IAEjC,aAAQ,GAAG,IAAIA,OAAO,EAAiB;IAE/C,kBAAa,GAAG,IAAI,CAACgB,YAAY,CAACC,YAAY,EAAE;IAEhD,iBAAY,GAAG,IAAI,CAACC,WAAW,CAACD,YAAY,EAAE;IAE9C,aAAQ,GAAG,IAAI,CAACE,OAAO,CAACF,YAAY,EAAE;IAEtC,cAAS,GAAG,IAAI,CAACG,QAAQ,CAACH,YAAY,EAAE;;EAExCI,YAAY;IACR,IAAI,IAAI,CAACC,SAAS,EAAE,EAAE;MAClB,IAAI,CAACC,KAAK,CAACb,yBAAyB,GAAG,CAAC,IAAI,CAACa,KAAK,CAACb,yBAAyB;KAC/E,MACI;MACD,IAAI,CAACa,KAAK,CAACT,sBAAsB,GAAG,CAAC,IAAI,CAACS,KAAK,CAACT,sBAAsB;MAEtE,IAAI,IAAI,CAACS,KAAK,CAACT,sBAAsB,EAAE;QACnC,IAAI,CAACI,WAAW,CAACM,IAAI,CAAC,IAAI,CAAC;;;EAGvC;EAEAC,oBAAoB;IAChB,IAAI,CAACP,WAAW,CAACM,IAAI,CAAC,IAAI,CAAC;EAC/B;EAEAE,kBAAkB;IACd,IAAI,CAACH,KAAK,CAACX,qBAAqB,GAAG,IAAI;EAC3C;EAEAe,iBAAiB;IACb,IAAI,CAACJ,KAAK,CAACV,oBAAoB,GAAG,IAAI;EAC1C;EAEAS,SAAS;IACL,OAAOM,MAAM,CAACC,UAAU,GAAG,GAAG;EAClC;EAEAC,MAAM;IACF,OAAO,IAAI,CAACC,MAAM,CAAC1B,QAAQ,KAAK,MAAM;EAC1C;EAEA2B,QAAQ;IACJ,OAAO,CAAC,IAAI,CAACV,SAAS,EAAE;EAC5B;EAEAW,cAAc;IACV,IAAI,CAACjB,YAAY,CAACQ,IAAI,CAAC,IAAI,CAACO,MAAM,CAAC;EACvC;EAEAG,SAAS,CAACC,KAAe;IACrB,IAAI,CAAChB,OAAO,CAACK,IAAI,CAACW,KAAK,CAAC;EAC5B;EAEAC,OAAO,CAACD,KAAe;IACnB,IAAI,CAACE,IAAI,GAAG,CAAC,GAAG,IAAI,CAACA,IAAI,EAAEF,KAAK,CAAC;EACrC;EAEAG,UAAU,CAACH,KAAe,EAAEI,KAAa;IACrC,IAAI,CAACnB,QAAQ,CAACI,IAAI,CAAC;MAACgB,GAAG,EAAEL,KAAK;MAAEI,KAAK,EAAEA;IAAK,CAAC,CAAC;EAClD;EAEAE,QAAQ,CAACF,KAAa;IAClB,IAAI,CAACF,IAAI,CAACK,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IAC1B,IAAI,CAACF,IAAI,GAAG,CAAC,GAAG,IAAI,CAACA,IAAI,CAAC;EAC9B;;;mBA/FSpC,aAAa;AAAA;;SAAbA,aAAa;EAAA0C,SAAb1C,aAAa;EAAA2C,YAFV;AAAM","names":["Subject","LayoutService","constructor","ripple","inputStyle","menuMode","colorScheme","theme","layoutTheme","scale","staticMenuDesktopInactive","overlayMenuActive","profileSidebarVisible","configSidebarVisible","staticMenuMobileActive","menuHoverActive","configUpdate","asObservable","overlayOpen","tabOpen","tabClose","onMenuToggle","isDesktop","state","next","onOverlaySubmenuOpen","showProfileSidebar","showConfigSidebar","window","innerWidth","isSlim","config","isMobile","onConfigUpdate","onTabOpen","value","openTab","tabs","onTabClose","index","tab","closeTab","splice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\verona-ng-15.0.1\\src\\app\\layout\\service\\app.layout.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { Subject } from 'rxjs';\nimport { TabCloseEvent } from '../api/tabcloseevent';\n\nexport interface AppConfig {\n    inputStyle: string;\n    colorScheme: string;\n    theme: string;\n    ripple: boolean;\n    menuMode: string;\n    layoutTheme: string;\n    scale: number;\n}\n\ninterface LayoutState {\n    staticMenuDesktopInactive: boolean;\n    overlayMenuActive: boolean;\n    profileSidebarVisible: boolean;\n    configSidebarVisible: boolean;\n    staticMenuMobileActive: boolean;\n    menuHoverActive: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LayoutService {\n\n    config: AppConfig = {\n        ripple: false,\n        inputStyle: 'outlined',\n        menuMode: 'slim',\n        colorScheme: 'light',\n        theme: 'indigo',\n        layoutTheme: 'colorScheme',\n        scale: 14\n    };\n\n    state: LayoutState = {\n        staticMenuDesktopInactive: false,\n        overlayMenuActive: false,\n        profileSidebarVisible: false,\n        configSidebarVisible: false,\n        staticMenuMobileActive: false,\n        menuHoverActive: false\n    };\n\n    tabs: MenuItem[] = [];\n\n    private configUpdate = new Subject<AppConfig>();\n\n    private overlayOpen = new Subject<any>();\n\n    private tabOpen = new Subject<MenuItem>();\n\n    private tabClose = new Subject<TabCloseEvent>();\n\n    configUpdate$ = this.configUpdate.asObservable();\n\n    overlayOpen$ = this.overlayOpen.asObservable();\n\n    tabOpen$ = this.tabOpen.asObservable();\n\n    tabClose$ = this.tabClose.asObservable();\n\n    onMenuToggle() {\n        if (this.isDesktop()) {\n            this.state.staticMenuDesktopInactive = !this.state.staticMenuDesktopInactive;\n        }\n        else {\n            this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n            if (this.state.staticMenuMobileActive) {\n                this.overlayOpen.next(null);\n            }\n        }\n    }\n\n    onOverlaySubmenuOpen() {\n        this.overlayOpen.next(null);\n    }\n\n    showProfileSidebar() {\n        this.state.profileSidebarVisible = true;\n    }\n\n    showConfigSidebar() {\n        this.state.configSidebarVisible = true;\n    }\n\n    isDesktop() {\n        return window.innerWidth > 991;\n    }\n\n    isSlim() {\n        return this.config.menuMode === 'slim';\n    }\n\n    isMobile() {\n        return !this.isDesktop();\n    }\n\n    onConfigUpdate() {\n        this.configUpdate.next(this.config);\n    }\n\n    onTabOpen(value: MenuItem) {\n        this.tabOpen.next(value);\n    }\n\n    openTab(value: MenuItem) {\n        this.tabs = [...this.tabs, value];\n    }\n\n    onTabClose(value: MenuItem, index: number) {\n        this.tabClose.next({tab: value, index: index});\n    }\n\n    closeTab(index: number) {\n        this.tabs.splice(index, 1);\n        this.tabs = [...this.tabs];\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}