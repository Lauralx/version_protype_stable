{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthRoutingModule {}\nAuthRoutingModule.ɵfac = function AuthRoutingModule_Factory(t) {\n  return new (t || AuthRoutingModule)();\n};\nAuthRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AuthRoutingModule\n});\nAuthRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forChild([{\n    path: 'error',\n    loadChildren: () => import('./error/error.module').then(m => m.ErrorModule)\n  }, {\n    path: 'access',\n    loadChildren: () => import('./accessdenied/accessdenied.module').then(m => m.AccessdeniedModule)\n  }, {\n    path: 'login',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\n  }, {\n    path: 'forgotpassword',\n    loadChildren: () => import('./forgotpassword/forgotpassword.module').then(m => m.ForgotPasswordModule)\n  }, {\n    path: 'register',\n    loadChildren: () => import('./register/register.module').then(m => m.RegisterModule)\n  }, {\n    path: 'newpassword',\n    loadChildren: () => import('./newpassword/newpassword.module').then(m => m.NewPasswordModule)\n  }, {\n    path: 'verification',\n    loadChildren: () => import('./verification/verification.module').then(m => m.VerificationModule)\n  }, {\n    path: 'lockscreen',\n    loadChildren: () => import('./lockscreen/lockscreen.module').then(m => m.LockScreenModule)\n  }, {\n    path: '**',\n    redirectTo: '/notfound'\n  }]), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AuthRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;;;AAgB9C,OAAM,MAAOC,iBAAiB;;mBAAjBA,iBAAiB;AAAA;;QAAjBA;AAAiB;;YAbhBD,YAAY,CAACE,QAAQ,CAAC,CAC5B;IAAEC,IAAI,EAAE,OAAO;IAAEC,YAAY,EAAE,MAAM,MAAM,CAAC,sBAAsB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW;EAAC,CAAE,EAC9F;IAAEJ,IAAI,EAAE,QAAQ;IAAEC,YAAY,EAAE,MAAM,MAAM,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,kBAAkB;EAAC,CAAE,EACpH;IAAEL,IAAI,EAAE,OAAO;IAAEC,YAAY,EAAE,MAAM,MAAM,CAAC,sBAAsB,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACG,WAAW;EAAC,CAAE,EAC9F;IAAEN,IAAI,EAAE,gBAAgB;IAAEC,YAAY,EAAE,MAAM,MAAM,CAAC,wCAAwC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACI,oBAAoB;EAAC,CAAE,EAClI;IAAEP,IAAI,EAAE,UAAU;IAAEC,YAAY,EAAE,MAAM,MAAM,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,cAAc;EAAC,CAAE,EAC1G;IAAER,IAAI,EAAE,aAAa;IAAEC,YAAY,EAAE,MAAM,MAAM,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACM,iBAAiB;EAAC,CAAE,EACtH;IAAET,IAAI,EAAE,cAAc;IAAEC,YAAY,EAAE,MAAM,MAAM,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACO,kBAAkB;EAAC,CAAE,EAC1H;IAAEV,IAAI,EAAE,YAAY;IAAEC,YAAY,EAAE,MAAM,MAAM,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACQ,gBAAgB;EAAC,CAAE,EAClH;IAAEX,IAAI,EAAE,IAAI;IAAEY,UAAU,EAAE;EAAW,CAAE,CAC1C,CAAC,EACQf,YAAY;AAAA;;2EAEbC,iBAAiB;IAAAe;IAAAC,UAFhBjB,YAAY;EAAA;AAAA","names":["RouterModule","AuthRoutingModule","forChild","path","loadChildren","then","m","ErrorModule","AccessdeniedModule","LoginModule","ForgotPasswordModule","RegisterModule","NewPasswordModule","VerificationModule","LockScreenModule","redirectTo","imports","exports"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\auth\\auth-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: 'error', loadChildren: () => import('./error/error.module').then(m => m.ErrorModule) },\n        { path: 'access', loadChildren: () => import('./accessdenied/accessdenied.module').then(m => m.AccessdeniedModule) },\n        { path: 'login', loadChildren: () => import('./login/login.module').then(m => m.LoginModule) },\n        { path: 'forgotpassword', loadChildren: () => import('./forgotpassword/forgotpassword.module').then(m => m.ForgotPasswordModule) },\n        { path: 'register', loadChildren: () => import('./register/register.module').then(m => m.RegisterModule) },\n        { path: 'newpassword', loadChildren: () => import('./newpassword/newpassword.module').then(m => m.NewPasswordModule) },\n        { path: 'verification', loadChildren: () => import('./verification/verification.module').then(m => m.VerificationModule) },\n        { path: 'lockscreen', loadChildren: () => import('./lockscreen/lockscreen.module').then(m => m.LockScreenModule) },\n        { path: '**', redirectTo: '/notfound' }\n    ])],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}