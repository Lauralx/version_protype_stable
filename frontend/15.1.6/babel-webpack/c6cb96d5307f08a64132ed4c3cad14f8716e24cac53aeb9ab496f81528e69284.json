{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/layout/service/app.layout.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0, a1) {\n  return {\n    backgroundColor: a0,\n    color: a1\n  };\n};\nfunction ColorsComponent_div_128_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const shade_r4 = i0.ɵɵnextContext().$implicit;\n    const color_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(3, _c0, \"var(--\" + color_r2 + \"-\" + shade_r4, shade_r4 > 500 ? \"#fff\" : \"#000\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", color_r2, \"-\", shade_r4, \" \");\n  }\n}\nfunction ColorsComponent_div_128_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ColorsComponent_div_128_div_1_div_1_Template, 2, 6, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const shade_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", shade_r4 !== 0);\n  }\n}\nfunction ColorsComponent_div_128_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, ColorsComponent_div_128_div_1_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.shades);\n  }\n}\nfunction ColorsComponent_div_135_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const shade_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(2, _c0, \"var(--surface-\" + shade_r8, ctx_r1.colorScheme ? shade_r8 > 400 ? \"#000\" : \"#fff\" : shade_r8 > 500 ? \"#fff\" : \"#000\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" surface-\", shade_r8, \" \");\n  }\n}\nexport class ColorsComponent {\n  constructor(layoutService) {\n    this.layoutService = layoutService;\n    this.colors = ['blue', 'green', 'yellow', 'cyan', 'pink', 'indigo', 'red', 'teal', 'orange', 'bluegray', 'purple', 'gray', 'primary'];\n    this.shades = [0, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n  }\n  get colorScheme() {\n    return this.layoutService.config.colorScheme === 'light' ? false : true;\n  }\n}\nColorsComponent.ɵfac = function ColorsComponent_Factory(t) {\n  return new (t || ColorsComponent)(i0.ɵɵdirectiveInject(i1.LayoutService));\n};\nColorsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ColorsComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 136,\n  vars: 2,\n  consts: [[1, \"card\"], [1, \"text-primary\", \"font-medium\"], [1, \"app-code\"], [1, \"w-full\"], [1, \"text-900\", \"text-left\", \"p-2\"], [1, \"border-bottom-1\", \"surface-border\", \"p-2\"], [1, \"font-medium\"], [1, \"p-2\"], [1, \"flex\", \"flex-wrap\"], [\"class\", \"flex flex-column mr-6 mb-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"flex-column\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"flex-column\", \"mr-6\", \"mb-6\"], [\"class\", \"flex align-items-center w-19rem  p-3 font-bold\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"flex\", \"align-items-center\", \"w-19rem\", \"p-3\", \"font-bold\", 3, \"ngStyle\"]],\n  template: function ColorsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Colors\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"Each PrimeNG theme exports its own color palette.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"h4\");\n      i0.ɵɵtext(6, \"Getting Started\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8, \"Colors are exported as CSS variables and used with the standard \");\n      i0.ɵɵelementStart(9, \"span\", 1);\n      i0.ɵɵtext(10, \"var\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(11, \" syntax e.g. \");\n      i0.ɵɵelementStart(12, \"span\", 1);\n      i0.ɵɵtext(13, \"var(--text-color)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \".\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"pre\", 2)(16, \"code\");\n      i0.ɵɵtext(17, \"<span [ngStyle]=\\\"{color:'var(--text-color)'}\\\"></span>\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"h4\");\n      i0.ɵɵtext(19, \"PrimeFlex Integration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"p\");\n      i0.ɵɵtext(21, \"Color utility classes of PrimeFlex such as background, text and border use the exported CSS variables from the theme so PrimeFlex or PrimeBlocks are perfectly compatible with the provided themes. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"pre\", 2)(23, \"code\");\n      i0.ɵɵtext(24, \"<div class=\\\"bg-blue-500\\\"></div>\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"h4\");\n      i0.ɵɵtext(26, \"Exported Colors\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"p\");\n      i0.ɵɵtext(28, \"Following is the list of colors exported as CSS variables from the theme.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 0)(30, \"table\", 3)(31, \"thead\")(32, \"tr\")(33, \"th\", 4);\n      i0.ɵɵtext(34, \"Variable\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"th\", 4);\n      i0.ɵɵtext(36, \"Description\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"tbody\")(38, \"tr\")(39, \"td\", 5)(40, \"span\", 6);\n      i0.ɵɵtext(41, \"--text-color\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"td\", 5);\n      i0.ɵɵtext(43, \"Font text color.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"tr\")(45, \"td\", 5)(46, \"span\", 6);\n      i0.ɵɵtext(47, \"--text-color-secondary\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(48, \"td\", 5);\n      i0.ɵɵtext(49, \"Muted font text color with a secondary level.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(50, \"tr\")(51, \"td\", 5)(52, \"span\", 6);\n      i0.ɵɵtext(53, \"--primary-color\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"td\", 5);\n      i0.ɵɵtext(55, \"Primary color of the theme.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(56, \"tr\")(57, \"td\", 5)(58, \"span\", 6);\n      i0.ɵɵtext(59, \"--primary-color-text\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(60, \"td\", 5);\n      i0.ɵɵtext(61, \"Text color when background is primary color.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(62, \"tr\")(63, \"td\", 5)(64, \"span\", 6);\n      i0.ɵɵtext(65, \"--font-family\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(66, \"td\", 5);\n      i0.ɵɵtext(67, \"Font family of the theme.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(68, \"tr\")(69, \"td\", 5)(70, \"span\", 6);\n      i0.ɵɵtext(71, \"--surface-ground\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(72, \"td\", 5);\n      i0.ɵɵtext(73, \"Base ground color.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(74, \"tr\")(75, \"td\", 5)(76, \"span\", 6);\n      i0.ɵɵtext(77, \"--surface-section\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(78, \"td\", 5);\n      i0.ɵɵtext(79, \"Color of a section on a ground surface.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(80, \"tr\")(81, \"td\", 5)(82, \"span\", 6);\n      i0.ɵɵtext(83, \"--surface-card\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(84, \"td\", 5);\n      i0.ɵɵtext(85, \"Color of a surface used as a card.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(86, \"tr\")(87, \"td\", 5)(88, \"span\", 6);\n      i0.ɵɵtext(89, \"--surface-overlay\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(90, \"td\", 5);\n      i0.ɵɵtext(91, \"Color of overlay surfaces.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(92, \"tr\")(93, \"td\", 5)(94, \"span\", 6);\n      i0.ɵɵtext(95, \"--surface-border\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(96, \"td\", 5);\n      i0.ɵɵtext(97, \"Color of a divider.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(98, \"tr\")(99, \"td\", 5)(100, \"span\", 6);\n      i0.ɵɵtext(101, \"--surface-hover\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(102, \"td\", 5);\n      i0.ɵɵtext(103, \"Color of an element in hover state.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(104, \"tr\")(105, \"td\", 5)(106, \"span\", 6);\n      i0.ɵɵtext(107, \"--focus-ring\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(108, \"td\", 5);\n      i0.ɵɵtext(109, \"Box shadow of a focused item.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(110, \"tr\")(111, \"td\", 5)(112, \"span\", 6);\n      i0.ɵɵtext(113, \"--maskbg\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(114, \"td\", 5);\n      i0.ɵɵtext(115, \"Background color of an overlay mask.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(116, \"tr\")(117, \"td\", 7)(118, \"span\", 6);\n      i0.ɵɵtext(119, \"--border-radius\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(120, \"td\", 7);\n      i0.ɵɵtext(121, \"Border radius of an element.\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(122, \"h4\");\n      i0.ɵɵtext(123, \"Color Palette\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(124, \"p\");\n      i0.ɵɵtext(125, \"A palette consists of 9 colors where each color provides tints/shades from 50 to 900.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(126, \"div\", 0)(127, \"div\", 8);\n      i0.ɵɵtemplate(128, ColorsComponent_div_128_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(129, \"h4\");\n      i0.ɵɵtext(130, \"Surfaces\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(131, \"p\");\n      i0.ɵɵtext(132, \"In addition, a theme brings a special palette called surfaces that can be used as the base when designing the surface layers and separators.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(133, \"div\", 0)(134, \"div\", 10);\n      i0.ɵɵtemplate(135, ColorsComponent_div_135_Template, 3, 5, \"div\", 11);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(128);\n      i0.ɵɵproperty(\"ngForOf\", ctx.colors);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.shades);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.NgStyle],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","ColorsComponent","constructor","layoutService","colorScheme","config","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\utilities\\colors\\colors.component.html","C:\\Users\\UsuarioPrincipal\\Downloads\\frontend_verona-ng-15.0.1\\src\\app\\demo\\components\\utilities\\colors\\colors.component.ts"],"sourcesContent":["<div class=\"card\">\n\t<h2>Colors</h2>\n\t<p>Each PrimeNG theme exports its own color palette.</p>\n\n\t<h4>Getting Started</h4>\n\t<p>Colors are exported as CSS variables and used with the standard <span class=\"text-primary font-medium\">var</span> syntax e.g. <span class=\"text-primary font-medium\">var(--text-color)</span>.</p>\n\t\n<pre class=\"app-code\"><code>&lt;span [ngStyle]=\"&#123;color:'var(--text-color)'&#125;\"&gt;&lt;/span&gt;</code></pre>\n\n\t<h4>PrimeFlex Integration</h4>\n\t<p>Color utility classes of PrimeFlex such as background, text and border use the exported CSS variables from the theme so PrimeFlex or PrimeBlocks\n\t\tare perfectly compatible with the provided themes.\n\t</p>\n\n<pre class=\"app-code\"><code>&lt;div class=\"bg-blue-500\"&gt;&lt;/div&gt;</code></pre>\n\n\t<h4>Exported Colors</h4>\n\t<p>Following is the list of colors exported as CSS variables from the theme.</p>\n\t<div class=\"card\">\n\t\t<table class=\"w-full\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th class=\"text-900 text-left p-2\">Variable</th>\n\t\t\t\t\t<th class=\"text-900 text-left p-2\">Description</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--text-color</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Font text color.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--text-color-secondary</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Muted font text color with a secondary level.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--primary-color</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Primary color of the theme.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--primary-color-text</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Text color when background is primary color.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--font-family</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Font family of the theme.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--surface-ground</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Base ground color.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--surface-section</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Color of a section on a ground surface.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--surface-card</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Color of a surface used as a card.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--surface-overlay</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Color of overlay surfaces.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--surface-border</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Color of a divider.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--surface-hover</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Color of an element in hover state.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--focus-ring</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Box shadow of a focused item.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\"><span class=\"font-medium\">--maskbg</span></td>\n\t\t\t\t\t<td class=\"border-bottom-1 surface-border p-2\">Background color of an overlay mask.</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"p-2\"><span class=\"font-medium\">--border-radius</span></td>\n\t\t\t\t\t<td class=\"p-2\">Border radius of an element.</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<h4>Color Palette</h4>\n\t<p>A palette consists of 9 colors where each color provides tints/shades from 50 to 900.</p>\n\t<div class=\"card\">\n\t\t<div class=\"flex flex-wrap\">\n\t\t\t<div *ngFor=\"let color of colors\" class=\"flex flex-column mr-6 mb-6\">\n\t\t\t\t<div *ngFor=\"let shade of shades\">\n\t\t\t\t\t<div *ngIf=\"shade !== 0\" class=\"flex align-items-center w-19rem  p-3 font-bold\" [ngStyle]=\"{backgroundColor:'var(--'+color+'-'+shade, color: (shade > 500 ? '#fff': '#000')}\">\n\t\t\t\t\t\t{{color}}-{{shade}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<h4>Surfaces</h4>\n\t<p>In addition, a theme brings a special palette called surfaces that can be used as the base when designing the surface layers and separators.</p>\n\t<div class=\"card\">\n\t\t<div class=\"flex flex-column\">\n\t\t\t<div *ngFor=\"let shade of shades\">\n\t\t\t\t<div class=\"flex align-items-center w-19rem  p-3 font-bold\" [ngStyle]=\"{backgroundColor:'var(--surface-'+shade, color: (colorScheme ? (shade > 400 ? '#000': '#fff') : (shade > 500 ? '#fff' : '#000'))}\">\n\t\t\t\t\tsurface-{{shade}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Component } from '@angular/core';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\n\n@Component({\n    templateUrl: './colors.component.html'\n})\nexport class ColorsComponent {\n\n    colors: any[] = ['blue', 'green', 'yellow', 'cyan', 'pink', 'indigo', 'red', 'teal', 'orange', 'bluegray', 'purple', 'gray', 'primary'];\n\n    shades: any[] = [0, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\n    constructor(private layoutService: LayoutService) { }\n\n    get colorScheme() {\n        return this.layoutService.config.colorScheme === 'light' ? false : true;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}